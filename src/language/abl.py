
# This was generated by src/language/abl_rules/build.py
# Do not edit this file directly.
# If you want to change the keywords, edit src/language/abl_rules/_keywords.py
# If you want to change the colors, edit src/language/abl_rules/config.py

# App level imports
from modules.logging import Log

# Language level imports
from .modules.lex import TOKEN
from .abl_lookup import kw_lookup

logger = Log(__name__)

# If false, this will not track whitespace and force the user to comply
# This is required for the language model wether True or False
track_whitespace = False

# Wow, long list. 
tokens = ['COMMA', 'SEMICOLON', 'LBRACKET', 'RBRACKET', 'LBRACE', 'RBRACE', 'TILDE', 'PLUS', 'MINUS', 'MULTIPLY', 'DIVIDE', 'GTEQ', 'LTEQ', 'UNKNOWN', 'WHITESPACE', 'ABSTRACT', 'ACCELERATOR', 'ACCUM', 'ACTIVE_FORM', 'ACTIVE_WINDOW', 'ADD', 'ADD_BUFFER', 'ADD_CALC_COLUMN', 'ADD_COLUMNS_FROM', 'ADD_EVENTS_PROCEDURE', 'ADD_FIELDS_FROM', 'ADD_FIRST', 'ADD_INDEX_FIELD', 'ADD_LAST', 'ADD_LIKE_COLUMN', 'ADD_LIKE_FIELD', 'ADD_LIKE_INDEX', 'ADD_NEW_FIELD', 'ADD_NEW_INDEX', 'ADD_SCHEMA_LOCATION', 'ADD_SUPER_PROCEDURE', 'ADM_DATA', 'ADVISE', 'ALERT_BOX', 'ALIAS', 'ALL', 'ALLOW_COLUMN_SEARCHING', 'ALLOW_REPLICATION', 'ALTER', 'ALWAYS_ON_TOP', 'AND', 'ANSI_ONLY', 'ANY', 'ANYWHERE', 'APPEND', 'APPL_CONTEXT_ID', 'APPLICATION', 'APPLY', 'APPSERVER_INFO', 'APPSERVER_PASSWORD', 'APPSERVER_USERID', 'ARRAY_MESSAGE', 'AS', 'ASC', 'ASK_OVERWRITE', 'ASSEMBLY', 'ASSIGN', 'ASYNC_REQUEST_COUNT', 'ASYNC_REQUEST_HANDLE', 'ASYNCHRONOUS', 'AT', 'ATTACHED_PAIRLIST', 'AUDIT_CONTROL', 'AUDIT_ENABLED', 'AUDIT_EVENT_CONTEXT', 'AUDIT_POLICY', 'AUTHENTICATION_FAILED', 'AUTHORIZATION', 'AUTO_END_KEY', 'AUTO_ENDKEY', 'AUTO_GO', 'AUTO_RESIZE', 'AUTO_SYNCHRONIZE', 'AUTOMATIC', 'AVAILABLE_FORMATS', 'AVG', 'BASE_ADE', 'BASE_KEY', 'BASE64_DECODE', 'BASE64_ENCODE', 'BATCH_SIZE', 'BEGIN_EVENT_GROUP', 'BEGINS', 'BELL', 'BETWEEN', 'BIG_ENDIAN', 'BINARY', 'BIND', 'BIND_WHERE', 'BLANK', 'BLOCK_ITERATION_DISPLAY', 'BOX', 'BREAK', 'BROWSE', 'BUFFER', 'BUFFER_CHARS', 'BUFFER_COMPARE', 'BUFFER_COPY', 'BUFFER_CREATE', 'BUFFER_DELETE', 'BUFFER_FIELD', 'BUFFER_HANDLE', 'BUFFER_LINES', 'BUFFER_NAME', 'BUFFER_PARTITION_ID', 'BUFFER_RELEASE', 'BUFFER_VALUE', 'BUTTON', 'BY', 'BY_POINTER', 'BY_VARIANT_POINTER', 'CACHE', 'CACHE_SIZE', 'CALL', 'CALL_NAME', 'CALL_TYPE', 'CAN_CREATE', 'CAN_DELETE', 'CAN_DO', 'CAN_DO_DOMAIN_SUPPORT', 'CAN_FIND', 'CAN_QUERY', 'CAN_READ', 'CAN_SET', 'CAN_WRITE', 'CANCEL_BREAK', 'CANCEL_BUTTON', 'CAPS', 'CAREFUL_PAINT', 'CAST', 'CDECL', 'CHAINED', 'CHARACTER_LENGTH', 'CHARSET', 'CHECK', 'CHECKED', 'CHOOSE', 'CHR', 'CLASS_TYPE', 'CLEAR', 'CLEAR_APPL_CONTEXT', 'CLEAR_LOG', 'CLIENT_CONNECTION_ID', 'CLIENT_PRINCIPAL', 'CLIENT_TTY', 'CLIENT_TYPE', 'CLIENT_WORKSTATION', 'CLIPBOARD', 'CLOSE_STORED_PROCEDURE', 'CLOSE_LOG', 'CODE', 'CODEBASE_LOCATOR', 'CODEPAGE', 'CODEPAGE_CONVERT', 'COL_OF', 'COLLATE', 'COLON', 'COLOR', 'COLOR_TABLE', 'COLUMN_BGCOLOR', 'COLUMN_DCOLOR', 'COLUMN_FGCOLOR', 'COLUMN_FONT', 'COLUMN_MOVABLE', 'COLUMN_OF', 'COLUMN_PFCOLOR', 'COLUMN_READ_ONLY', 'COLUMN_RESIZABLE', 'COLUMN_SCROLLING', 'COLUMNS', 'COM_HANDLE', 'COM_SELF', 'COMBO_BOX', 'COMMAND', 'COMPARES', 'COMPILE', 'COMPILER', 'COMPLETE', 'CONFIG_NAME', 'CONNECT', 'CONNECTED', 'CONTAINS', 'CONTENTS', 'CONTEXT', 'CONTEXT_HELP', 'CONTEXT_HELP_FILE', 'CONTEXT_HELP_ID', 'CONTEXT_POPUP', 'CONTROL', 'CONTROL_BOX', 'CONTROL_FRAME', 'CONVERT', 'CONVERT_3D_COLORS', 'COPY_DATASET', 'COPY_LOB', 'COPY_SAX_ATTRIBUTES', 'COPY_TEMP_TABLE', 'COUNT', 'COUNT_OF', 'CPCASE', 'CPCOLL', 'CPINTERNAL', 'CPLOG', 'CPPRINT', 'CPRCODEIN', 'CPRCODEOUT', 'CPSTREAM', 'CPTERM', 'CRC_VALUE', 'CREATE', 'CREATE_LIKE', 'CREATE_LIKE_SEQUENTIAL', 'CREATE_NODE_NAMESPACE', 'CREATE_RESULT_LIST_ENTRY', 'CREATE_TEST_FILE', 'CURRENT', 'CURRENT_CHANGED', 'CURRENT_COLUMN', 'CURRENT_ITERATION', 'CURRENT_QUERY', 'CURRENT_REQUEST_INFO', 'CURRENT_RESPONSE_INFO', 'CURRENT_RESULT_ROW', 'CURRENT_ROW_MODIFIED', 'CURRENT_VALUE', 'CURRENT_WINDOW', 'CURRENT_DATE', 'CURSOR_CHAR', 'CURSOR_LINE', 'CURSOR_OFFSET', 'DATA_BIND', 'DATA_SOURCE', 'DATA_SOURCE_COMPLETE_MAP', 'DATA_SOURCE_MODIFIED', 'DATA_SOURCE_ROWID', 'DATABASE', 'DATASERVERS', 'DATASET', 'DATASET_HANDLE', 'DATE', 'DAY', 'DB_CONTEXT', 'DB_REFERENCES', 'DBCODEPAGE', 'DBCOLLATION', 'DBNAME', 'DBPARAM', 'DBTASKID', 'DBTYPE', 'DCOLOR', 'DDE', 'DDE_ERROR', 'DDE_ITEM', 'DDE_NAME', 'DDE_TOPIC', 'DEBLANK', 'DEBUG_ALERT', 'DEBUG_LIST', 'DEBUGGER', 'DECIMALS', 'DECLARE', 'DECLARE_NAMESPACE', 'DECRYPT', 'DEFAULT', 'DEFAULT_BUFFER_HANDLE', 'DEFAULT_COMMIT', 'DEFAULT_VALUE', 'DEFAULT_WINDOW', 'DEFINE_USER_EVENT_MANAGER', 'DEFINED', 'DELEGATE', 'DELETE_PROCEDURE', 'DELETE_CHAR', 'DELETE_CURRENT_ROW', 'DELETE_LINE', 'DELETE_RESULT_LIST_ENTRY', 'DELETE_SELECTED_ROW', 'DELETE_SELECTED_ROWS', 'DELIMITER', 'DESC', 'DESELECT_FOCUSED_ROW', 'DESELECT_ROWS', 'DESELECT_SELECTED_ROW', 'DESELECTION', 'DIALOG_BOX', 'DIR', 'DISABLE', 'DISABLE_AUTO_ZAP', 'DISABLE_DUMP_TRIGGERS', 'DISABLE_LOAD_TRIGGERS', 'DISABLED', 'DISPLAY_MESSAGE', 'DISTINCT', 'DOMAIN_DESCRIPTION', 'DOMAIN_NAME', 'DOMAIN_TYPE', 'DOS', 'DOUBLE', 'DOWN', 'DRAG_ENABLED', 'DROP', 'DROP_DOWN', 'DROP_DOWN_LIST', 'DROP_FILE_NOTIFY', 'DROP_TARGET', 'DUMP', 'DYNAMIC', 'DYNAMIC_ENUM', 'DYNAMIC_FUNCTION', 'DYNAMIC_INVOKE', 'EACH', 'ECHO', 'EDIT_CAN_PASTE', 'EDIT_CAN_UNDO', 'EDIT_CLEAR', 'EDIT_COPY', 'EDIT_CUT', 'EDIT_PASTE', 'EDIT_UNDO', 'EDITING', 'EDITOR', 'EMPTY', 'EMPTY_TEMP_TABLE', 'ENABLE', 'ENABLED_FIELDS', 'ENCODE', 'ENCRYPT', 'ENCRYPT_AUDIT_MAC_KEY', 'ENCRYPTION_SALT', 'END_DOCUMENT', 'END_ELEMENT', 'END_EVENT_GROUP', 'END_FILE_DROP', 'END_KEY', 'END_MOVE', 'END_RESIZE', 'END_ROW_RESIZE', 'END_USER_PROMPT', 'ENDKEY', 'ENTERED', 'ENTITY_EXPANSION_LIMIT', 'ENTRY', 'ENUM', 'EQ', 'ERROR', 'ERROR_ROW', 'ERROR_STACK_TRACE', 'ESCAPE', 'ETIME', 'EVENT', 'EVENT_GROUP_ID', 'EVENT_PROCEDURE', 'EVENT_PROCEDURE_CONTEXT', 'EVENTS', 'EXCEPT', 'EXCLUSIVE_ID', 'EXCLUSIVE_WEB_USER', 'EXECUTE', 'EXISTS', 'EXP', 'EXPAND', 'EXPANDABLE', 'EXPLICIT', 'EXPORT', 'EXPORT_PRINCIPAL', 'EXTENDED', 'EXTENT', 'EXTERNAL', 'FALSE', 'FETCH', 'FETCH_SELECTED_ROW', 'FIELD', 'FILE', 'FILE_CREATE_DATE', 'FILE_CREATE_TIME', 'FILE_MOD_DATE', 'FILE_MOD_TIME', 'FILE_NAME', 'FILE_SIZE', 'FILE_TYPE', 'FILENAME', 'FILL', 'FILL_IN', 'FILLED', 'FILTERS', 'FINAL', 'FIND_BY_ROWID', 'FIND_CASE_SENSITIVE', 'FIND_CURRENT', 'FIND_FIRST', 'FIND_GLOBAL', 'FIND_LAST', 'FIND_NEXT_OCCURRENCE', 'FIND_PREV_OCCURRENCE', 'FIND_SELECT', 'FIND_UNIQUE', 'FIND_WRAP_AROUND', 'FINDER', 'FIRST', 'FIRST_ASYNCH_REQUEST', 'FIRST_CHILD', 'FIRST_COLUMN', 'FIRST_FORM', 'FIRST_OBJECT', 'FIRST_OF', 'FIRST_SERVER', 'FIT_LAST_COLUMN', 'FIXED_ONLY', 'FLAT_BUTTON', 'FLOAT', 'FOCUS', 'FOCUSED_ROW', 'FOCUSED_ROW_SELECTED', 'FONT', 'FONT_TABLE', 'FOR', 'FORCE_FILE', 'FORM', 'FORM_INPUT', 'FORM_LONG_INPUT', 'FREQUENCY', 'FROM', 'FUNCTION_CALL_TYPE', 'GE', 'GENERATE_MD5', 'GENERATE_PBE_KEY', 'GENERATE_PBE_SALT', 'GENERATE_RANDOM_KEY', 'GENERATE_UUID', 'GET', 'GET_ATTR_CALL_TYPE', 'GET_ATTRIBUTE_NODE', 'GET_BINARY_DATA', 'GET_BROWSE_COLUMN', 'GET_BUFFER_HANDLE', 'GET_BYTE', 'GET_CALLBACK_PROC_CONTEXT', 'GET_CALLBACK_PROC_NAME', 'GET_CGI_LIST', 'GET_CGI_LONG_VALUE', 'GET_CGI_VALUE', 'GET_CLASS', 'GET_CODEPAGES', 'GET_COLLATIONS', 'GET_CONFIG_VALUE', 'GET_CURRENT', 'GET_DOUBLE', 'GET_DROPPED_FILE', 'GET_DYNAMIC', 'GET_ERROR_COLUMN', 'GET_ERROR_ROW', 'GET_FILE', 'GET_FILE_NAME', 'GET_FIRST', 'GET_FLOAT', 'GET_INDEX_BY_NAMESPACE_NAME', 'GET_INDEX_BY_QNAME', 'GET_INT64', 'GET_ITERATION', 'GET_LAST', 'GET_LOCALNAME_BY_INDEX', 'GET_LONG', 'GET_MESSAGE', 'GET_NEXT', 'GET_NUMBER', 'GET_POINTER_VALUE', 'GET_PREV', 'GET_PRINTERS', 'GET_PROPERTY', 'GET_QNAME_BY_INDEX', 'GET_REPOSITIONED_ROW', 'GET_RGB_VALUE', 'GET_SHORT', 'GET_SIGNATURE', 'GET_SIZE', 'GET_STRING', 'GET_TAB_ITEM', 'GET_TYPE_BY_INDEX', 'GET_TYPE_BY_NAMESPACE_NAME', 'GET_TYPE_BY_QNAME', 'GET_UNSIGNED_LONG', 'GET_UNSIGNED_SHORT', 'GET_URI_BY_INDEX', 'GET_VALUE_BY_INDEX', 'GET_VALUE_BY_NAMESPACE_NAME', 'GET_VALUE_BY_QNAME', 'GET_WAIT_STATE', 'GETBYTE', 'GLOBAL', 'GO_ON', 'GRANT', 'GRID_SNAP', 'GRID_VISIBLE', 'GROUP', 'GT', 'GUID', 'HANDLE', 'HANDLER', 'HAS_RECORDS', 'HAVING', 'HEADER', 'HELP', 'HEX_DECODE', 'HEX_ENCODE', 'HIDDEN', 'HIDE', 'HOST_BYTE_ORDER', 'HTML_CHARSET', 'HTML_END_OF_LINE', 'HTML_END_OF_PAGE', 'HTML_FRAME_BEGIN', 'HTML_FRAME_END', 'HTML_HEADER_BEGIN', 'HTML_HEADER_END', 'HTML_TITLE_BEGIN', 'HTML_TITLE_END', 'HWND', 'ICON', 'IMAGE', 'IMAGE_DOWN', 'IMAGE_INSENSITIVE', 'IMAGE_SIZE', 'IMAGE_UP', 'IMMEDIATE_DISPLAY', 'IMPLEMENTS', 'IMPORT', 'IMPORT_PRINCIPAL', 'IN', 'IN_HANDLE', 'INCREMENT_EXCLUSIVE_ID', 'INDEX', 'INDEX_HINT', 'INDEX_INFORMATION', 'INDEXED_REPOSITION', 'INDICATOR', 'INHERITS', 'INITIAL_DIR', 'INITIAL_FILTER', 'INITIALIZE_DOCUMENT_TYPE', 'INITIATE', 'INNER_CHARS', 'INNER_LINES', 'INPUT', 'INPUT_VALUE', 'INSERT', 'INSERT_ATTRIBUTE', 'INSERT_FILE', 'INSERT_ROW', 'INSERT_STRING', 'INT', 'INT64', 'INTERFACE', 'INTERNAL_ENTRIES', 'INTO', 'INVOKE', 'IS', 'IS_JSON', 'IS_OPEN', 'IS_PARAMETER_SET', 'IS_ROW_SELECTED', 'IS_SELECTED', 'IS_XML', 'ITEM', 'ITEMS_PER_ROW', 'JOIN', 'JOIN_BY_SQLDB', 'KBLABEL', 'KEEP_CONNECTION_OPEN', 'KEEP_MESSAGES', 'KEEP_SECURITY_CACHE', 'KEEP_TAB_ORDER', 'KEY', 'KEY_CODE', 'KEY_LABEL', 'KEYCODE', 'KEYLABEL', 'KEYS', 'KEYWORD', 'KEYWORD_ALL', 'LABEL', 'LABEL_FONT', 'LABELS', 'LABELS_HAVE_COLONS', 'LANDSCAPE', 'LARGE', 'LARGE_TO_SMALL', 'LAST', 'LAST_ASYNCH_REQUEST', 'LAST_BATCH', 'LAST_CHILD', 'LAST_FORM', 'LAST_KEY', 'LAST_OBJECT', 'LAST_OF', 'LAST_SERVER', 'LASTKEY', 'LC', 'LDBNAME', 'LE', 'LEAVE', 'LEFT_TRIM', 'LENGTH', 'LIBRARY', 'LIKE', 'LIKE_SEQUENTIAL', 'LINE', 'LIST_EVENTS', 'LIST_ITEM_PAIRS', 'LIST_ITEMS', 'LIST_PROPERTY_NAMES', 'LIST_QUERY_ATTRS', 'LIST_SET_ATTRS', 'LIST_WIDGETS', 'LITERAL_QUESTION', 'LITTLE_ENDIAN', 'LOAD', 'LOAD_DOMAINS', 'LOAD_ICON', 'LOAD_IMAGE', 'LOAD_IMAGE_DOWN', 'LOAD_IMAGE_INSENSITIVE', 'LOAD_IMAGE_UP', 'LOAD_PICTURE', 'LOAD_SMALL_ICON', 'LOCAL_NAME', 'LOCAL_VERSION_INFO', 'LOCATOR_COLUMN_NUMBER', 'LOCATOR_LINE_NUMBER', 'LOCATOR_PUBLIC_ID', 'LOCATOR_SYSTEM_ID', 'LOCATOR_TYPE', 'LOCK_REGISTRATION', 'LOCKED', 'LOG', 'LOG_AUDIT_EVENT', 'LOG_MANAGER', 'LOGICAL', 'LOGIN_EXPIRATION_TIMESTAMP', 'LOGIN_HOST', 'LOGIN_STATE', 'LOGOUT', 'LOOKAHEAD', 'LOOKUP', 'LT', 'MACHINE_CLASS', 'MANDATORY', 'MANUAL_HIGHLIGHT', 'MAP', 'MARGIN_EXTRA', 'MARK_NEW', 'MARK_ROW_STATE', 'MATCHES', 'MAX', 'MAX_BUTTON', 'MAX_CHARS', 'MAX_DATA_GUESS', 'MAX_HEIGHT', 'MAX_ROWS', 'MAX_SIZE', 'MAX_WIDTH', 'MAXIMIZE', 'MAXIMUM_LEVEL', 'MD5_DIGEST', 'MEMBER', 'MEMPTR_TO_NODE_VALUE', 'MENU', 'MENU_BAR', 'MENU_ITEM', 'MENUBAR', 'MERGE_BY_FIELD', 'MESSAGE_AREA', 'MESSAGE_AREA_FONT', 'MESSAGE_LINES', 'MIN', 'MIN_BUTTON', 'MIN_SIZE', 'MODIFIED', 'MONTH', 'MOUSE', 'MOVABLE', 'MOVE_TO_EOF', 'MPE', 'MTIME', 'MULTI_COMPILE', 'MULTIPLE', 'MULTIPLE_KEY', 'MULTITASKING_INTERVAL', 'MUST_EXIST', 'NAME', 'NAMESPACE_PREFIX', 'NAMESPACE_URI', 'NATIVE', 'NE', 'NEEDS_APPSERVER_PROMPT', 'NEEDS_PROMPT', 'NEW', 'NEW_INSTANCE', 'NEW_ROW', 'NEXT', 'NEXT_COLUMN', 'NEXT_PROMPT', 'NEXT_ROWID', 'NEXT_SIBLING', 'NEXT_VALUE', 'NO', 'NO_APPLY', 'NO_ARRAY_MESSAGE', 'NO_ASSIGN', 'NO_AUTO_VALIDATE', 'NO_BIND_WHERE', 'NO_BOX', 'NO_CONSOLE', 'NO_CONVERT', 'NO_CONVERT_3D_COLORS', 'NO_CURRENT_VALUE', 'NO_DEBUG', 'NO_DRAG', 'NO_ECHO', 'NO_EMPTY_SPACE', 'NO_ERROR', 'NO_FOCUS', 'NO_HELP', 'NO_HIDE', 'NO_INDEX_HINT', 'NO_JOIN_BY_SQLDB', 'NO_LOBS', 'NO_LOCK', 'NO_LOOKAHEAD', 'NO_MAP', 'NO_PAUSE', 'NO_ROW_MARKERS', 'NO_SCROLLBAR_VERTICAL', 'NO_SEPARATE_CONNECTION', 'NO_SEPARATORS', 'NO_TAB_STOP', 'NO_UNDO', 'NO_WAIT', 'NO_WORD_WRAP', 'NODE_VALUE_TO_MEMPTR', 'NONAMESPACE_SCHEMA_LOCATION', 'NONE', 'NORMALIZE', 'NOT', 'NOT_ACTIVE', 'NOW', 'NULL', 'NUM_BUFFERS', 'NUM_COPIES', 'NUM_DBS', 'NUM_DROPPED_FILES', 'NUM_ENTRIES', 'NUM_FIELDS', 'NUM_FORMATS', 'NUM_ITEMS', 'NUM_ITERATIONS', 'NUM_LINES', 'NUM_MESSAGES', 'NUM_PARAMETERS', 'NUM_REFERENCES', 'NUM_REPLACED', 'NUM_RESULTS', 'NUM_SELECTED_ROWS', 'NUM_TABS', 'NUM_TO_RETAIN', 'NUM_VISIBLE_COLUMNS', 'NUMERIC', 'OBJECT', 'OCTET_LENGTH', 'OF', 'OFF', 'OK', 'OK_CANCEL', 'OLD', 'ON', 'OPEN', 'OPSYS', 'OPTION', 'OR', 'ORDERED_JOIN', 'ORDINAL', 'OS_APPEND', 'OS_COMMAND', 'OS_COPY', 'OS_CREATE_DIR', 'OS_DELETE', 'OS_DIR', 'OS_ERROR', 'OS_GETENV', 'OS_RENAME', 'OUTPUT', 'OVERLAY', 'OVERRIDE', 'OWNER', 'PAGE', 'PAGE_SIZE', 'PAGE_TOP', 'PAGED', 'PARENT', 'PARSE_STATUS', 'PARTIAL_KEY', 'PASCAL', 'PASSWORD_FIELD', 'PATHNAME', 'PAUSE', 'PBE_KEY_ROUNDS', 'PDBNAME', 'PERSISTENT_CACHE_DISABLED', 'PIXELS', 'PIXELS_PER_ROW', 'PORTRAIT', 'POSITION', 'PRECISION', 'PREFER_DATASET', 'PREPARE_STRING', 'PREPARED', 'PREV', 'PREV_COLUMN', 'PREV_SIBLING', 'PRIMARY', 'PRINTER', 'PRINTER_CONTROL_HANDLE', 'PRINTER_HDC', 'PRINTER_NAME', 'PRINTER_PORT', 'PRINTER_SETUP', 'PRIVATE', 'PRIVILEGES', 'PROCEDURE_CALL_TYPE', 'PROCEDURE_TYPE', 'PROCESS', 'PROFILER', 'PROGRAM_NAME', 'PROGRESS', 'PROMPT', 'PROMSGS', 'PROPATH', 'PROPERTY', 'PROTECTED', 'PROXY', 'PROXY_PASSWORD', 'PROXY_USERID', 'PUBLIC', 'PUBLIC_ID', 'PUBLISH', 'PUBLISHED_EVENTS', 'PUT', 'PUT_BYTE', 'PUT_DOUBLE', 'PUT_FLOAT', 'PUT_INT64', 'PUT_LONG', 'PUT_SHORT', 'PUT_STRING', 'PUT_UNSIGNED_LONG', 'PUTBYTE', 'QUERY', 'QUERY_CLOSE', 'QUERY_OFF_END', 'QUERY_OPEN', 'QUERY_PREPARE', 'QUERY_TUNING', 'QUESTION', 'QUIT', 'QUOTER', 'R_INDEX', 'RADIO_BUTTONS', 'RADIO_SET', 'RANDOM', 'RAW', 'RAW_TRANSFER', 'READ_AVAILABLE', 'READ_EXACT_NUM', 'READ_FILE', 'READ_JSON', 'READ_ONLY', 'READ_XML', 'READKEY', 'REAL', 'RECID', 'RECORD_LENGTH', 'RECURSIVE', 'REFERENCE_ONLY', 'REFRESH', 'REFRESH_AUDIT_POLICY', 'REFRESHABLE', 'REGISTER_DOMAIN', 'RELEASE', 'REMOTE', 'REMOVE_EVENTS_PROCEDURE', 'REMOVE_SUPER_PROCEDURE', 'REPLACE', 'REPLACE_SELECTION_TEXT', 'REPOSITION', 'REPOSITION_BACKWARD', 'REPOSITION_FORWARD', 'REPOSITION_MODE', 'REPOSITION_TO_ROW', 'REPOSITION_TO_ROWID', 'REQUEST', 'REQUEST_INFO', 'RESET', 'RESIZE', 'RESPONSE_INFO', 'RESTART_ROW', 'RESTART_ROWID', 'RETAIN', 'RETAIN_SHAPE', 'RETRY', 'RETRY_CANCEL', 'RETURN', 'RETURN_VALUE_DATA_TYPE', 'RETURNS', 'REVERSE_FROM', 'REVERT', 'REVOKE', 'RGB_VALUE', 'RIGHT_TRIM', 'ROLES', 'ROUND', 'ROUTINE_LEVEL', 'ROW', 'ROW_MARKERS', 'ROW_OF', 'ROW_RESIZABLE', 'ROWID', 'RULE', 'RUN_PROCEDURE', 'SAVE', 'SAVE_CACHE', 'SAVE_AS', 'SAVE_FILE', 'SAX_PARSE', 'SAX_PARSE_FIRST', 'SAX_PARSE_NEXT', 'SAX_PARSER_ERROR', 'SAX_RUNNING', 'SAX_UNINITIALIZED', 'SAX_WRITE_BEGIN', 'SAX_WRITE_COMPLETE', 'SAX_WRITE_CONTENT', 'SAX_WRITE_ELEMENT', 'SAX_WRITE_ERROR', 'SAX_WRITE_IDLE', 'SAX_WRITE_TAG', 'SAX_WRITER', 'SCHEMA', 'SCHEMA_LOCATION', 'SCHEMA_MARSHAL', 'SCHEMA_PATH', 'SCREEN', 'SCREEN_IO', 'SCREEN_LINES', 'SCROLL', 'SCROLL_BARS', 'SCROLL_DELTA', 'SCROLL_OFFSET', 'SCROLL_TO_CURRENT_ROW', 'SCROLL_TO_SELECTED_ROW', 'SCROLLABLE', 'SCROLLING', 'SDBNAME', 'SEAL', 'SEAL_TIMESTAMP', 'SEARCH', 'SEARCH_SELF', 'SEARCH_TARGER', 'SECTION', 'SECURITY_POLICY', 'SEEK', 'SELECT', 'SELECT_ALL', 'SELECT_FOCUSED_ROW', 'SELECT_NEXT_ROW', 'SELECT_PREV_ROW', 'SELECT_ROW', 'SELECTABLE', 'SELECTED', 'SELECTION', 'SELECTION_END', 'SELECTION_LIST', 'SELECTION_START', 'SELECTION_TEXT', 'SELF', 'SEND', 'SENSITIVE', 'SEPARATE_CONNECTION', 'SEPARATOR_FGCOLOR', 'SEPARATORS', 'SERIALIZABLE', 'SERIALIZE_HIDDEN', 'SERIALIZE_NAME', 'SERVER', 'SERVER_CONNECTION_BOUND', 'SERVER_CONNECTION_BOUND_REQUEST', 'SERVER_CONNECTION_CONTEXT', 'SERVER_CONNECTION_ID', 'SERVER_OPERATING_MODE', 'SESSION', 'SESSION_ID', 'SET', 'SET_APPL_CONTEXT', 'SET_ATTR_CALL_TYPE', 'SET_ATTRIBUTE_NODE', 'SET_BREAK', 'SET_BUFFERS', 'SET_CALLBACK', 'SET_CLIENT', 'SET_COMMIT', 'SET_CONTENTS', 'SET_CURRENT_VALUE', 'SET_DB_CLIENT', 'SET_DYNAMIC', 'SET_EVENT_MANAGER_OPTION', 'SET_INPUT_SOURCE', 'SET_OPTION', 'SET_OUTPUT_DESTINATION', 'SET_PARAMETER', 'SET_POINTER_VALUE', 'SET_PROPERTY', 'SET_REPOSITIONED_ROW', 'SET_RGB_VALUE', 'SET_ROLLBACK', 'SET_SELECTION', 'SET_SIZE', 'SET_SORT_ARROW', 'SET_WAIT_STATE', 'SHA1_DIGEST', 'SHARED', 'SHOW_IN_TASKBAR', 'SIGNATURE', 'SILENT', 'SIMPLE', 'SINGLE', 'SINGLE_RUN', 'SINGLETON', 'SIZE', 'SKIP', 'SKIP_DELETED_RECORD', 'SLIDER', 'SMALL_ICON', 'SMALL_TITLE', 'SMALLINT', 'SOME', 'SORT', 'SORT_ASCENDING', 'SORT_NUMBER', 'SOURCE', 'SOURCE_PROCEDURE', 'SPACE', 'SQL', 'SQRT', 'SSL_SERVER_NAME', 'STANDALONE', 'START', 'START_DOCUMENT', 'START_ELEMENT', 'START_MOVE', 'START_RESIZE', 'START_ROW_RESIZE', 'STATE_DETAIL', 'STATIC', 'STATUS', 'STATUS_AREA', 'STATUS_AREA_FONT', 'STDCALL', 'STOP', 'STOP_AFTER', 'STOP_PARSING', 'STREAM', 'STREAM_HANDLE', 'STREAM_IO', 'STRETCH_TO_FIT', 'STRICT', 'STRICT_ENTITY_RESOLUTION', 'STRING', 'STRING_VALUE', 'STRING_XREF', 'SUB_COUNT', 'SUB_TOTAL', 'SUBSCRIBE', 'SUBTYPE', 'SUM', 'SUPER', 'SUPER_PROCEDURES', 'SUPPRESS_NAMESPACE_PROCESSING', 'SYMMETRIC_ENCRYPTION_ALGORITHM', 'SYMMETRIC_ENCRYPTION_IV', 'SYMMETRIC_ENCRYPTION_KEY', 'SYMMETRIC_SUPPORT', 'SYSTEM_DIALOG', 'SYSTEM_HELP', 'SYSTEM_ID', 'TAB_POSITION', 'TAB_STOP', 'TABLE', 'TABLE_HANDLE', 'TABLE_NUMBER', 'TABLE_SCAN', 'TARGET', 'TARGET_PROCEDURE', 'TEMP_TABLE', 'TEMP_TABLE_PREPARE', 'TERM', 'TERMINATE', 'TEXT', 'TEXT_CURSOR', 'TEXT_SEG_GROW', 'TEXT_SELECTED', 'THIS_OBJECT', 'THIS_PROCEDURE', 'THREAD_SAFE', 'THREE_D', 'THROUGH', 'THROW', 'THRU', 'TIC_MARKS', 'TIME', 'TIME_SOURCE', 'TITLE', 'TO', 'TO_ROWID', 'TODAY', 'TOGGLE_BOX', 'TOOLTIP', 'TOOLTIPS', 'TOP_NAV_QUERY', 'TOP_ONLY', 'TOPIC', 'TOTAL', 'TRAILING', 'TRANS', 'TRANS_INIT_PROCEDURE', 'TRANSACTION', 'TRANSACTION_MODE', 'TRANSPARENT', 'TRIGGER', 'TRIGGERS', 'TRIM', 'TRUE', 'TYPE', 'TYPE_OF', 'UNBOX', 'UNDO', 'UNION', 'UNIQUE', 'UNIQUE_ID', 'UNIQUE_MATCH', 'UNIX', 'UNLESS_HIDDEN', 'UNLOAD', 'UNSIGNED_LONG', 'UNSUBSCRIBE', 'UP', 'UPDATE', 'UPDATE_ATTRIBUTE', 'URL', 'URL_DECODE', 'URL_ENCODE', 'URL_PASSWORD', 'URL_USERID', 'USE', 'USE_DICT_EXPS', 'USE_FILENAME', 'USE_INDEX', 'USE_REVVIDEO', 'USE_TEXT', 'USE_UNDERLINE', 'USE_WIDGET_POOL', 'USER', 'USER_ID', 'USERID', 'USING', 'V6DISPLAY', 'V6FRAME', 'VALID_EVENT', 'VALID_HANDLE', 'VALID_OBJECT', 'VALIDATE', 'VALIDATE_EXPRESSION', 'VALIDATE_MESSAGE', 'VALIDATE_SEAL', 'VALIDATION_ENABLED', 'VALUE', 'VALUE_CHANGED', 'VALUES', 'VERBOSE', 'VERSION', 'VIEW', 'VIEW_AS', 'VIEW_FIRST_COLUMN_ON_REOPEN', 'VISIBLE', 'VOID', 'WAIT', 'WAIT_FOR', 'WARNING', 'WEB_CONTEXT', 'WEEKDAY', 'WHEN', 'WHERE', 'WIDGET', 'WIDGET_ID', 'WIDGET_POOL', 'WIDTH', 'WINDOW', 'WINDOW_NAME', 'WINDOW_NORMAL', 'WINDOW_SYSTEM', 'WITH', 'WORD_INDEX', 'WORD_WRAP', 'WORK_AREA_HEIGHT_PIXELS', 'WORK_AREA_WIDTH_PIXELS', 'WORK_AREA_X', 'WORK_AREA_Y', 'WORKFILE', 'WRITE', 'WRITE_CDATA', 'WRITE_CHARACTERS', 'WRITE_COMMENT', 'WRITE_DATA_ELEMENT', 'WRITE_EMPTY_ELEMENT', 'WRITE_ENTITY_REF', 'WRITE_EXTERNAL_DTD', 'WRITE_FRAGMENT', 'WRITE_JSON', 'WRITE_MESSAGE', 'WRITE_PROCESSING_INSTRUCTION', 'WRITE_STATUS', 'WRITE_XML', 'WRITE_XMLSCHEMA', 'X', 'X_OF', 'XCODE', 'XML_DATA_TYPE', 'XML_ENTITY_EXPANSION_LIMIT', 'XML_NODE_TYPE', 'XML_SCHEMA_PATH', 'XML_STRICT_ENTITY_RESOLUTION', 'XML_SUPPRESS_NAMESPACE_PROCESSING', 'XREF', 'XREF_XML', 'Y', 'Y_OF', 'YEAR', 'YEAR_OFFSET', 'YES', 'YES_NO', 'YES_NO_CANCEL', 'DS_CLOSE_CURSOR', 'PROC_TEXT', 'PROC_TEXT_BUFFER', '_FILE_NAME', '_OPSYS', '_PROCESS_ARCHITECTURE', '_SEQUENCE']

# Regular expression rules for simple tokens
t_GTEQ = r'>='
t_LTEQ = r'<='
t_NE   = r'<>'
t_GT = r'>'
t_LT = r'<'
t_PLUS   = r'\+'
t_MINUS  = r'\-'
t_MULTIPLY = r'\*'
t_DIVIDE = r'\/'
t_COMMA  = r'\,'
t_SEMICOLON = r'\;'
t_ASSIGN = r'\:='
t_UNKNOWN = r'\?'
t_TILDE = r'~'
t_LBRACKET = r'\['
t_RBRACKET = r'\]'
t_LBRACE = r'\{'
t_RBRACE = r'\}'

###                        
# Rules are executed top down 
# So grab the comments and strings first to prevent mistakes
###        

# If newline is not checked first then any comment or string might wipe out
# the line number counters correctness 
def t_newline(t):
    r'\n+'

    # Preprocessor directives start with the ampersand and end with newline
    if t.lexer.preprocessor:
        t.lexer.preprocessor = False
        t.lexer.in_query = False

    t.lexer.lineno += len(t.value)
    t.lexer.colno = 0
    # This extra space is a fix for the fact that sometimes the : separates an object and method
    # and sometimes it starts a block. The need for no space around the first and a space around 
    # the second can be solved adding a space to before the newline. 
    t.value = ' ' + t.value
    t.tag = 'nl'
    return t

###
# Key-Commands. Not progress keywords, but same same
###

# Seems excessive, but it's what's needed. 
def t_FUNCTION_KEY(t):
    r"""(?:'([fF]1[0-2]|[fF][1-9])'|"([fF]1[0-2]|[fF][1-9])"|\b([fF]1[0-2]|[fF][1-9])\b)"""
    t.tag = 'red' 
    return t

###
# special things
###

def t_SNG_COMMENT(t):
    r'//.*'
    t.tag = 'green'
    return t

# r'/\*[\s\S]*?\*/'     # Zero nested
# r'/\*(?:(?:(?!\*/)[\s\S])*?(?:/\*(?:(?!\*/)[\s\S])*?(?:/\*(?:(?!\*/)[\s\S])*?\*/(?:(?!\*/)[\s\S])*?)*\*/(?:(?!\*/)[\s\S])*?)*\*/' # Triple nested
def t_MULTI_COMMENT(t):
    r'/\*(?:(?:(?!\*/)[\s\S])*?(?:/\*(?:(?!\*/)[\s\S])*?\*/(?:(?!\*/)[\s\S])*?)*)\*/' # Double nested
    t.lexer.lineno += t.value.count('\n')
    t.tag = 'green'
    return t

# Comments that have started are going to be a challenge
def t_COMMENT_STARTED(t):
    r'/\*.*'
    t.tag = 'green'
    return t

def t_CURLY_BRACE(t):
    r'{(?:.*?)}'
    t.tag = 'orange'
    return t

def t_NESTED_CURLY_BRACE(t):
    r'(?:\{(?:[^{}]*\{[^{}]*\}[^{}]*)*[^{}]*\})'
    t.tag = 'orange'
    return t

def t_ARRAY_BRACE(t):
    r'\[[\s\S]*?\]'
    t.tag = 'yellow'
    return t

def t_DATE_STR(t):
    r'(?:0?[1-9]|1[0-2])[/\-\.](?:0?[1-9]|[12][0-9]|3[01])[/\-\.](?:\d{4}|\d{2})'
    t.tag = 'violet'
    return t

# Decimal must come before int or 0.5 will be int 0 and float .5
def t_DEC_STRING(t):
    r'\b-?\d*\.\d+\b'
    t.value = t.value
    t.tag = 'violet'
    return t

def t_INT_STRING(t):
    r'\b-?\d+\b'
    t.tag = 'violet'
    return t

def t_DBL_STRING(t):
    r'\"[^"]*\"'
    t.tag = 'violet'
    return t

def t_SNG_STRING(t):
    r"\'[^']*\'"
    t.tag = 'violet'
    return t

def t_COMPARISON_OP(t):
    r'\b(?:GE|LE|GT|LT)\b'
    t.tag = 'magenta'
    return t

    
###
# Indentation custom rules
# These are mainly here to deal with the multiple indent initializers can exist 
# in a single line. Until the grammar is sorted out. This will be the work around
# These are here also incase they are needed 
#    cBlockEndStatements = "END.,

### Start indents ###

def t_CLASS(t):
    r'CLASS'
    # Leave extra room incase an extra space
    if t.colno < 5: 
        t.lexer.hard_block = True
        t.tag = 'blue'
        t.indent = 1
        t.lexer.soft_block = False
        
    else:
        t.tag = 'violet'
    return t

def t_CLASS_GETTER(t):
    r'GET\([a-zA-Z0-9\.\-\_\:]*\)'
    t.lexer.hard_block = True
    t.tag = 'blue'
    t.indent = 1
    t.lexer.soft_block = False
    
    return t   

def t_FOR_EACH(t):
    r'\bFOR\sEACH\b'

    t.tag = 'blue'
    if not t.lexer.preprocessor:
        t.indent = 1
    # If in a query then we dont want to pick up indents from other keywords
        t.lexer.hard_block = True
        t.lexer.in_query = True
        
        # This is mainly here in case of development. Once things are solid, this should be removed
        t.tag = 'blue'
    return t

## Procedurally generated the next large block of defines

# Starting with indent statements.

def t_END_CONSTRUCTOR(t):
    r'\b(?:END\sCONSTRUCTOR)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_END_DESTRUCTOR(t):
    r'\b(?:END\sDESTRUCTOR)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_END_PROCEDURE(t):
    r'\b(?:END\sPROCEDURE)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_OTHERWISE_DO(t):
    r'\b(?:OTHERWISE\sDO)(?!\-)\b'
    t.lexer.hard_block = True
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = False
    return t
    
def t_END_FUNCTION(t):
    r'\b(?:END\sFUNCTION)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_END_FINALLY(t):
    r'\b(?:END\sFINALLY)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_CONSTRUCTOR(t):
    r'\b(?:CONSTRUCTOR)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_END_METHOD(t):
    r'\b(?:END\sMETHOD)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_DESTRUCTOR(t):
    r'\b(?:DESTRUCTOR)(?!\-)\b'
    t.lexer.hard_block = True
    t.lexer.in_query = True
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = False
    return t
    
def t_END_CATCH(t):
    r'\b(?:END\sCATCH)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_OTHERWISE(t):
    r'\b(?:OTHERWISE)(?!\-)\b'
    t.tag = 'grey'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_PROCEDURE(t):
    r'\b(?:PROCEDURE|PROCEDUR|PROCEDU|PROCED|PROCE)(?!\-)\b'
    t.lexer.hard_block = True
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = False
    return t
    
def t_END_CASE(t):
    r'\b(?:END\sCASE)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_FORWARDS(t):
    r'\b(?:FORWARDS)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'cyan'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_FUNCTION(t):
    r'\b(?:FUNCTION)(?!\-)\b'
    t.lexer.hard_block = True
    t.tag = 'cyan'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = False
    return t
    
def t_THEN_DO(t):
    r'\b(?:THEN\sDO)(?!\-)\b'
    t.lexer.hard_block = True
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = False
    return t
    
def t_ELSE_DO(t):
    r'\b(?:ELSE\sDO)(?!\-)\b'
    t.lexer.hard_block = True
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = False
    return t
    
def t_DISPLAY(t):
    r'\b(?:DISPLAY|DISPLA|DISPL|DISP)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_FINALLY(t):
    r'\b(?:FINALLY)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_FORWARD(t):
    r'\b(?:FORWARD)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'cyan'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_MESSAGE(t):
    r'\b(?:MESSAGE)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_METHOD(t):
    r'\b(?:METHOD)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_REPEAT(t):
    r'\b(?:REPEAT)(?!\-)\b'
    t.lexer.hard_block = True
    t.lexer.in_query = True
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = False
    return t
    
def t_CATCH(t):
    r'\b(?:CATCH)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_WHILE(t):
    r'\b(?:WHILE)(?!\-)\b'
    t.tag = 'grey'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_CASE(t):
    r'\b(?:CASE)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_ELSE(t):
    r'\b(?:ELSE)(?!\-)\b'
    t.tag = 'magenta'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_FIND(t):
    r'\b(?:FIND)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_THEN(t):
    r'\b(?:THEN)(?!\-)\b'
    t.tag = 'magenta'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_END(t):
    r'\b(?:END)(?!\-)\b'
    t.lexer.hard_block = False
    t.tag = 'blue'
    t.indent = -99
    t.lexer.soft_block = False
    return t
    
def t_RUN(t):
    r'\b(?:RUN)(?!\-)\b'
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
def t_DO(t):
    r'\b(?:DO)(?!\-)\b'
    t.lexer.hard_block = True
    t.lexer.in_query = True
    t.tag = 'blue'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = False
    return t
    
def t_IF(t):
    r'\b(?:IF)(?!\-)\b'
    t.tag = 'magenta'
    if not t.lexer.soft_block: t.indent = 1
    t.lexer.soft_block = True
    return t
    
###
# And now abbreviated keywords. Damn those abbreviated keywords. 
###

def t__GLOBAL_DEFINE(t):
    r'(?:\&GLOBAL\-DEFINE|\&GLOBAL\-DEFIN|\&GLOBAL\-DEFI|\&GLOBAL\-DEF|\&GLOBAL\-DE|\&GLOBAL\-D|\&GLOBAL\-|\&GLOBAL|\&GLOBA|\&GLOB)'
    
    # A global define could have a block start in it without an end. So start a hard block here 
    # and end it if we start another hard block. 
    t.lexer.preprocessor = True
    t.lexer.in_query = True
    t.tag = 'blue'
    return t

def t_GRID_UNIT_HEIGHT_PIXELS(t):
    r'\b(?:GRID\-UNIT\-HEIGHT\-PIXELS|GRID\-UNIT\-HEIGHT\-PIXEL|GRID\-UNIT\-HEIGHT\-PIXE|GRID\-UNIT\-HEIGHT\-PIX|GRID\-UNIT\-HEIGHT\-PI|GRID\-UNIT\-HEIGHT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MIN_COLUMN_WIDTH_PIXELS(t):
    r'\b(?:MIN\-COLUMN\-WIDTH\-PIXELS|MIN\-COLUMN\-WIDTH\-PIXEL|MIN\-COLUMN\-WIDTH\-PIXE|MIN\-COLUMN\-WIDTH\-PIX|MIN\-COLUMN\-WIDTH\-PI|MIN\-COLUMN\-WIDTH\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GET_TEXT_HEIGHT_PIXELS(t):
    r'\b(?:GET\-TEXT\-HEIGHT\-PIXELS|GET\-TEXT\-HEIGHT\-PIXEL|GET\-TEXT\-HEIGHT\-PIXE|GET\-TEXT\-HEIGHT\-PIX|GET\-TEXT\-HEIGHT\-PI|GET\-TEXT\-HEIGHT\-P)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_GRID_FACTOR_HORIZONTAL(t):
    r'\b(?:GRID\-FACTOR\-HORIZONTAL|GRID\-FACTOR\-HORIZONTA|GRID\-FACTOR\-HORIZONT|GRID\-FACTOR\-HORIZON|GRID\-FACTOR\-HORIZO|GRID\-FACTOR\-HORIZ|GRID\-FACTOR\-HORI|GRID\-FACTOR\-HOR|GRID\-FACTOR\-HO|GRID\-FACTOR\-H)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GRID_UNIT_HEIGHT_CHARS(t):
    r'\b(?:GRID\-UNIT\-HEIGHT\-CHARS|GRID\-UNIT\-HEIGHT\-CHAR|GRID\-UNIT\-HEIGHT\-CHA|GRID\-UNIT\-HEIGHT\-CH|GRID\-UNIT\-HEIGHT\-C|GRID\-UNIT\-HEIGHT\-|GRID\-UNIT\-HEIGHT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GRID_UNIT_WIDTH_PIXELS(t):
    r'\b(?:GRID\-UNIT\-WIDTH\-PIXELS|GRID\-UNIT\-WIDTH\-PIXEL|GRID\-UNIT\-WIDTH\-PIXE|GRID\-UNIT\-WIDTH\-PIX|GRID\-UNIT\-WIDTH\-PI|GRID\-UNIT\-WIDTH\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MIN_COLUMN_WIDTH_CHARS(t):
    r'\b(?:MIN\-COLUMN\-WIDTH\-CHARS|MIN\-COLUMN\-WIDTH\-CHAR|MIN\-COLUMN\-WIDTH\-CHA|MIN\-COLUMN\-WIDTH\-CH|MIN\-COLUMN\-WIDTH\-C)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GET_TEXT_HEIGHT_CHARS(t):
    r'\b(?:GET\-TEXT\-HEIGHT\-CHARS|GET\-TEXT\-HEIGHT\-CHAR|GET\-TEXT\-HEIGHT\-CHA|GET\-TEXT\-HEIGHT\-CH|GET\-TEXT\-HEIGHT\-C|GET\-TEXT\-HEIGHT\-|GET\-TEXT\-HEIGHT)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_GET_TEXT_WIDTH_PIXELS(t):
    r'\b(?:GET\-TEXT\-WIDTH\-PIXELS|GET\-TEXT\-WIDTH\-PIXEL|GET\-TEXT\-WIDTH\-PIXE|GET\-TEXT\-WIDTH\-PIX|GET\-TEXT\-WIDTH\-PI|GET\-TEXT\-WIDTH\-P)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_GRID_UNIT_WIDTH_CHARS(t):
    r'\b(?:GRID\-UNIT\-WIDTH\-CHARS|GRID\-UNIT\-WIDTH\-CHAR|GRID\-UNIT\-WIDTH\-CHA|GRID\-UNIT\-WIDTH\-CH|GRID\-UNIT\-WIDTH\-C|GRID\-UNIT\-WIDTH\-|GRID\-UNIT\-WIDTH)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SCROLLED_ROW_POSITION(t):
    r'\b(?:SCROLLED\-ROW\-POSITION|SCROLLED\-ROW\-POSITIO|SCROLLED\-ROW\-POSITI|SCROLLED\-ROW\-POSIT|SCROLLED\-ROW\-POSI|SCROLLED\-ROW\-POS)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_VIRTUAL_HEIGHT_PIXELS(t):
    r'\b(?:VIRTUAL\-HEIGHT\-PIXELS|VIRTUAL\-HEIGHT\-PIXEL|VIRTUAL\-HEIGHT\-PIXE|VIRTUAL\-HEIGHT\-PIX|VIRTUAL\-HEIGHT\-PI|VIRTUAL\-HEIGHT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BORDER_BOTTOM_PIXELS(t):
    r'\b(?:BORDER\-BOTTOM\-PIXELS|BORDER\-BOTTOM\-PIXEL|BORDER\-BOTTOM\-PIXE|BORDER\-BOTTOM\-PIX|BORDER\-BOTTOM\-PI|BORDER\-BOTTOM\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GET_TEXT_WIDTH_CHARS(t):
    r'\b(?:GET\-TEXT\-WIDTH\-CHARS|GET\-TEXT\-WIDTH\-CHAR|GET\-TEXT\-WIDTH\-CHA|GET\-TEXT\-WIDTH\-CH|GET\-TEXT\-WIDTH\-C|GET\-TEXT\-WIDTH\-|GET\-TEXT\-WIDTH)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_GRID_FACTOR_VERTICAL(t):
    r'\b(?:GRID\-FACTOR\-VERTICAL|GRID\-FACTOR\-VERTICA|GRID\-FACTOR\-VERTIC|GRID\-FACTOR\-VERTI|GRID\-FACTOR\-VERT|GRID\-FACTOR\-VER|GRID\-FACTOR\-VE|GRID\-FACTOR\-V)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MARGIN_HEIGHT_PIXELS(t):
    r'\b(?:MARGIN\-HEIGHT\-PIXELS|MARGIN\-HEIGHT\-PIXEL|MARGIN\-HEIGHT\-PIXE|MARGIN\-HEIGHT\-PIX|MARGIN\-HEIGHT\-PI|MARGIN\-HEIGHT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MOVE_BEFORE_TAB_ITEM(t):
    r'\b(?:MOVE\-BEFORE\-TAB\-ITEM|MOVE\-BEFORE\-TAB\-ITE|MOVE\-BEFORE\-TAB\-IT|MOVE\-BEFORE\-TAB\-I|MOVE\-BEFORE\-TAB\-|MOVE\-BEFORE\-TAB|MOVE\-BEFORE\-TA|MOVE\-BEFORE\-T|MOVE\-BEFORE\-|MOVE\-BEFORE|MOVE\-BEFOR)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_NUM_SELECTED_WIDGETS(t):
    r'\b(?:NUM\-SELECTED\-WIDGETS|NUM\-SELECTED\-WIDGET|NUM\-SELECTED\-WIDGE|NUM\-SELECTED\-WIDG|NUM\-SELECTED\-WID|NUM\-SELECTED\-WI|NUM\-SELECTED\-W|NUM\-SELECTED\-|NUM\-SELECTED)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SCROLLBAR_HORIZONTAL(t):
    r'\b(?:SCROLLBAR\-HORIZONTAL|SCROLLBAR\-HORIZONTA|SCROLLBAR\-HORIZONT|SCROLLBAR\-HORIZON|SCROLLBAR\-HORIZO|SCROLLBAR\-HORIZ|SCROLLBAR\-HORI|SCROLLBAR\-HOR|SCROLLBAR\-HO|SCROLLBAR\-H)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_VIRTUAL_HEIGHT_CHARS(t):
    r'\b(?:VIRTUAL\-HEIGHT\-CHARS|VIRTUAL\-HEIGHT\-CHAR|VIRTUAL\-HEIGHT\-CHA|VIRTUAL\-HEIGHT\-CH|VIRTUAL\-HEIGHT\-C|VIRTUAL\-HEIGHT\-|VIRTUAL\-HEIGHT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_VIRTUAL_WIDTH_PIXELS(t):
    r'\b(?:VIRTUAL\-WIDTH\-PIXELS|VIRTUAL\-WIDTH\-PIXEL|VIRTUAL\-WIDTH\-PIXE|VIRTUAL\-WIDTH\-PIX|VIRTUAL\-WIDTH\-PI|VIRTUAL\-WIDTH\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BORDER_BOTTOM_CHARS(t):
    r'\b(?:BORDER\-BOTTOM\-CHARS|BORDER\-BOTTOM\-CHAR|BORDER\-BOTTOM\-CHA|BORDER\-BOTTOM\-CH|BORDER\-BOTTOM\-C|BORDER\-BOTTOM\-|BORDER\-BOTTOM|BORDER\-BOTTO|BORDER\-BOTT|BORDER\-BOT|BORDER\-BO|BORDER\-B)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BORDER_RIGHT_PIXELS(t):
    r'\b(?:BORDER\-RIGHT\-PIXELS|BORDER\-RIGHT\-PIXEL|BORDER\-RIGHT\-PIXE|BORDER\-RIGHT\-PIX|BORDER\-RIGHT\-PI|BORDER\-RIGHT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_CURRENT_ENVIRONMENT(t):
    r'\b(?:CURRENT\-ENVIRONMENT|CURRENT\-ENVIRONMEN|CURRENT\-ENVIRONME|CURRENT\-ENVIRONM|CURRENT\-ENVIRON|CURRENT\-ENVIRO|CURRENT\-ENVIR|CURRENT\-ENVI|CURRENT\-ENV)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GET_SELECTED_WIDGET(t):
    r'\b(?:GET\-SELECTED\-WIDGET|GET\-SELECTED\-WIDGE|GET\-SELECTED\-WIDG|GET\-SELECTED\-WID|GET\-SELECTED\-WI|GET\-SELECTED\-W|GET\-SELECTED\-|GET\-SELECTED)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_MARGIN_HEIGHT_CHARS(t):
    r'\b(?:MARGIN\-HEIGHT\-CHARS|MARGIN\-HEIGHT\-CHAR|MARGIN\-HEIGHT\-CHA|MARGIN\-HEIGHT\-CH|MARGIN\-HEIGHT\-C|MARGIN\-HEIGHT\-|MARGIN\-HEIGHT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MARGIN_WIDTH_PIXELS(t):
    r'\b(?:MARGIN\-WIDTH\-PIXELS|MARGIN\-WIDTH\-PIXEL|MARGIN\-WIDTH\-PIXE|MARGIN\-WIDTH\-PIX|MARGIN\-WIDTH\-PI|MARGIN\-WIDTH\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MOVE_AFTER_TAB_ITEM(t):
    r'\b(?:MOVE\-AFTER\-TAB\-ITEM|MOVE\-AFTER\-TAB\-ITE|MOVE\-AFTER\-TAB\-IT|MOVE\-AFTER\-TAB\-I|MOVE\-AFTER\-TAB\-|MOVE\-AFTER\-TAB|MOVE\-AFTER\-TA|MOVE\-AFTER\-T|MOVE\-AFTER\-|MOVE\-AFTER)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_RETURN_TO_START_DIR(t):
    r'\b(?:RETURN\-TO\-START\-DIR|RETURN\-TO\-START\-DI)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_VIRTUAL_WIDTH_CHARS(t):
    r'\b(?:VIRTUAL\-WIDTH\-CHARS|VIRTUAL\-WIDTH\-CHAR|VIRTUAL\-WIDTH\-CHA|VIRTUAL\-WIDTH\-CH|VIRTUAL\-WIDTH\-C|VIRTUAL\-WIDTH\-|VIRTUAL\-WIDTH)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BORDER_LEFT_PIXELS(t):
    r'\b(?:BORDER\-LEFT\-PIXELS|BORDER\-LEFT\-PIXEL|BORDER\-LEFT\-PIXE|BORDER\-LEFT\-PIX|BORDER\-LEFT\-PI|BORDER\-LEFT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BORDER_RIGHT_CHARS(t):
    r'\b(?:BORDER\-RIGHT\-CHARS|BORDER\-RIGHT\-CHAR|BORDER\-RIGHT\-CHA|BORDER\-RIGHT\-CH|BORDER\-RIGHT\-C|BORDER\-RIGHT\-|BORDER\-RIGHT|BORDER\-RIGH|BORDER\-RIG|BORDER\-RI|BORDER\-R)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FULL_HEIGHT_PIXELS(t):
    r'\b(?:FULL\-HEIGHT\-PIXELS|FULL\-HEIGHT\-PIXEL|FULL\-HEIGHT\-PIXE|FULL\-HEIGHT\-PIX|FULL\-HEIGHT\-PI|FULL\-HEIGHT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_KEEP_FRAME_Z_ORDER(t):
    r'\b(?:KEEP\-FRAME\-Z\-ORDER|KEEP\-FRAME\-Z\-ORDE|KEEP\-FRAME\-Z\-ORD|KEEP\-FRAME\-Z\-OR|KEEP\-FRAME\-Z\-O|KEEP\-FRAME\-Z\-|KEEP\-FRAME\-Z)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_LOAD_MOUSE_POINTER(t):
    r'\b(?:LOAD\-MOUSE\-POINTER|LOAD\-MOUSE\-POINTE|LOAD\-MOUSE\-POINT|LOAD\-MOUSE\-POIN|LOAD\-MOUSE\-POI|LOAD\-MOUSE\-PO|LOAD\-MOUSE\-P)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_MARGIN_WIDTH_CHARS(t):
    r'\b(?:MARGIN\-WIDTH\-CHARS|MARGIN\-WIDTH\-CHAR|MARGIN\-WIDTH\-CHA|MARGIN\-WIDTH\-CH|MARGIN\-WIDTH\-C|MARGIN\-WIDTH\-|MARGIN\-WIDTH)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NO_INHERIT_BGCOLOR(t):
    r'\b(?:NO\-INHERIT\-BGCOLOR|NO\-INHERIT\-BGCOLO|NO\-INHERIT\-BGCOL|NO\-INHERIT\-BGCO|NO\-INHERIT\-BGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NO_INHERIT_FGCOLOR(t):
    r'\b(?:NO\-INHERIT\-FGCOLOR|NO\-INHERIT\-FGCOLO|NO\-INHERIT\-FGCOL|NO\-INHERIT\-FGCO|NO\-INHERIT\-FGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NUM_LOCKED_COLUMNS(t):
    r'\b(?:NUM\-LOCKED\-COLUMNS|NUM\-LOCKED\-COLUMN|NUM\-LOCKED\-COLUM|NUM\-LOCKED\-COLU|NUM\-LOCKED\-COL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PBE_HASH_ALGORITHM(t):
    r'\b(?:PBE\-HASH\-ALGORITHM|PBE\-HASH\-ALGORITH|PBE\-HASH\-ALGORIT|PBE\-HASH\-ALGORI|PBE\-HASH\-ALGOR|PBE\-HASH\-ALGO|PBE\-HASH\-ALG)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SCROLLBAR_VERTICAL(t):
    r'\b(?:SCROLLBAR\-VERTICAL|SCROLLBAR\-VERTICA|SCROLLBAR\-VERTIC|SCROLLBAR\-VERTI|SCROLLBAR\-VERT|SCROLLBAR\-VER|SCROLLBAR\-VE|SCROLLBAR\-V)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SYSTEM_ALERT_BOXES(t):
    r'\b(?:SYSTEM\-ALERT\-BOXES|SYSTEM\-ALERT\-BOXE|SYSTEM\-ALERT\-BOX|SYSTEM\-ALERT\-BO|SYSTEM\-ALERT\-B|SYSTEM\-ALERT\-|SYSTEM\-ALERT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SEND_SQL_STATEMENT(t):
    r'\b(?:send\-sql\-statement|send\-sql\-statemen|send\-sql\-stateme|send\-sql\-statem|send\-sql\-state|send\-sql\-stat|send\-sql\-sta|send\-sql\-st|send\-sql\-s|send\-sql\-|send\-sql)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_BORDER_LEFT_CHARS(t):
    r'\b(?:BORDER\-LEFT\-CHARS|BORDER\-LEFT\-CHAR|BORDER\-LEFT\-CHA|BORDER\-LEFT\-CH|BORDER\-LEFT\-C|BORDER\-LEFT\-|BORDER\-LEFT|BORDER\-LEF|BORDER\-LE|BORDER\-L)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BORDER_TOP_PIXELS(t):
    r'\b(?:BORDER\-TOP\-PIXELS|BORDER\-TOP\-PIXEL|BORDER\-TOP\-PIXE|BORDER\-TOP\-PIX|BORDER\-TOP\-PI|BORDER\-TOP\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_CLEAR_SORT_ARROWS(t):
    r'\b(?:CLEAR\-SORT\-ARROWS|CLEAR\-SORT\-ARROW)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_CONVERT_TO_OFFSET(t):
    r'\b(?:CONVERT\-TO\-OFFSET|CONVERT\-TO\-OFFSE|CONVERT\-TO\-OFFS)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_DATA_ENTRY_RETURN(t):
    r'\b(?:DATA\-ENTRY\-RETURN|DATA\-ENTRY\-RETUR|DATA\-ENTRY\-RETU|DATA\-ENTRY\-RET)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_DEFAULT_EXTENSION(t):
    r'\b(?:DEFAULT\-EXTENSION|DEFAULT\-EXTENSIO|DEFAULT\-EXTENSI|DEFAULT\-EXTENS|DEFAULT\-EXTEN|DEFAULT\-EXTE|DEFAULT\-EXT|DEFAULT\-EX)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_FULL_HEIGHT_CHARS(t):
    r'\b(?:FULL\-HEIGHT\-CHARS|FULL\-HEIGHT\-CHAR|FULL\-HEIGHT\-CHA|FULL\-HEIGHT\-CH|FULL\-HEIGHT\-C|FULL\-HEIGHT\-|FULL\-HEIGHT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FULL_WIDTH_PIXELS(t):
    r'\b(?:FULL\-WIDTH\-PIXELS|FULL\-WIDTH\-PIXEL|FULL\-WIDTH\-PIXE|FULL\-WIDTH\-PIX|FULL\-WIDTH\-PI|FULL\-WIDTH\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_IMAGE_SIZE_PIXELS(t):
    r'\b(?:IMAGE\-SIZE\-PIXELS|IMAGE\-SIZE\-PIXEL|IMAGE\-SIZE\-PIXE|IMAGE\-SIZE\-PIX|IMAGE\-SIZE\-PI|IMAGE\-SIZE\-P)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_MAX_HEIGHT_PIXELS(t):
    r'\b(?:MAX\-HEIGHT\-PIXELS|MAX\-HEIGHT\-PIXEL|MAX\-HEIGHT\-PIXE|MAX\-HEIGHT\-PIX|MAX\-HEIGHT\-PI|MAX\-HEIGHT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MIN_HEIGHT_PIXELS(t):
    r'\b(?:MIN\-HEIGHT\-PIXELS|MIN\-HEIGHT\-PIXEL|MIN\-HEIGHT\-PIXE|MIN\-HEIGHT\-PIX|MIN\-HEIGHT\-PI|MIN\-HEIGHT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PIXELS_PER_COLUMN(t):
    r'\b(?:PIXELS\-PER\-COLUMN|PIXELS\-PER\-COLUM|PIXELS\-PER\-COLU|PIXELS\-PER\-COL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_RCODE_INFORMATION(t):
    r'\b(?:RCODE\-INFORMATION|RCODE\-INFORMATIO|RCODE\-INFORMATI|RCODE\-INFORMAT|RCODE\-INFORMA|RCODE\-INFORM|RCODE\-INFOR|RCODE\-INFO)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_ROW_HEIGHT_PIXELS(t):
    r'\b(?:ROW\-HEIGHT\-PIXELS|ROW\-HEIGHT\-PIXEL|ROW\-HEIGHT\-PIXE|ROW\-HEIGHT\-PIX|ROW\-HEIGHT\-PI|ROW\-HEIGHT\-P|ROW\-HEIGHT\-|ROW\-HEIGHT|ROW\-HEIGH|ROW\-HEIG)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SIDE_LABEL_HANDLE(t):
    r'\b(?:SIDE\-LABEL\-HANDLE|SIDE\-LABEL\-HANDL|SIDE\-LABEL\-HAND|SIDE\-LABEL\-HAN|SIDE\-LABEL\-HA|SIDE\-LABEL\-H)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SUPPRESS_WARNINGS(t):
    r'\b(?:SUPPRESS\-WARNINGS|SUPPRESS\-WARNING|SUPPRESS\-WARNIN|SUPPRESS\-WARNI|SUPPRESS\-WARN|SUPPRESS\-WAR|SUPPRESS\-WA|SUPPRESS\-W)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_APPL_ALERT_BOXES(t):
    r'\b(?:APPL\-ALERT\-BOXES|APPL\-ALERT\-BOXE|APPL\-ALERT\-BOX|APPL\-ALERT\-BO|APPL\-ALERT\-B|APPL\-ALERT\-|APPL\-ALERT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BORDER_TOP_CHARS(t):
    r'\b(?:BORDER\-TOP\-CHARS|BORDER\-TOP\-CHAR|BORDER\-TOP\-CHA|BORDER\-TOP\-CH|BORDER\-TOP\-C|BORDER\-TOP\-|BORDER\-TOP|BORDER\-TO|BORDER\-T)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_CURRENT_LANGUAGE(t):
    r'\b(?:CURRENT\-LANGUAGE|CURRENT\-LANGUAG|CURRENT\-LANGUA|CURRENT\-LANGU|CURRENT\-LANG)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_FILE_INFORMATION(t):
    r'\b(?:FILE\-INFORMATION|FILE\-INFORMATIO|FILE\-INFORMATI|FILE\-INFORMAT|FILE\-INFORMA|FILE\-INFORM|FILE\-INFOR|FILE\-INFO)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_FULL_WIDTH_CHARS(t):
    r'\b(?:FULL\-WIDTH\-CHARS|FULL\-WIDTH\-CHAR|FULL\-WIDTH\-CHA|FULL\-WIDTH\-CH|FULL\-WIDTH\-C|FULL\-WIDTH\-|FULL\-WIDTH)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_IMAGE_SIZE_CHARS(t):
    r'\b(?:IMAGE\-SIZE\-CHARS|IMAGE\-SIZE\-CHAR|IMAGE\-SIZE\-CHA|IMAGE\-SIZE\-CH|IMAGE\-SIZE\-C)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_MAX_HEIGHT_CHARS(t):
    r'\b(?:MAX\-HEIGHT\-CHARS|MAX\-HEIGHT\-CHAR|MAX\-HEIGHT\-CHA|MAX\-HEIGHT\-CH|MAX\-HEIGHT\-C)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MAX_WIDTH_PIXELS(t):
    r'\b(?:MAX\-WIDTH\-PIXELS|MAX\-WIDTH\-PIXEL|MAX\-WIDTH\-PIXE|MAX\-WIDTH\-PIX|MAX\-WIDTH\-PI|MAX\-WIDTH\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MIN_HEIGHT_CHARS(t):
    r'\b(?:MIN\-HEIGHT\-CHARS|MIN\-HEIGHT\-CHAR|MIN\-HEIGHT\-CHA|MIN\-HEIGHT\-CH|MIN\-HEIGHT\-C|MIN\-HEIGHT\-|MIN\-HEIGHT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MIN_WIDTH_PIXELS(t):
    r'\b(?:MIN\-WIDTH\-PIXELS|MIN\-WIDTH\-PIXEL|MIN\-WIDTH\-PIXE|MIN\-WIDTH\-PIX|MIN\-WIDTH\-PI|MIN\-WIDTH\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_ROW_HEIGHT_CHARS(t):
    r'\b(?:ROW\-HEIGHT\-CHARS|ROW\-HEIGHT\-CHAR|ROW\-HEIGHT\-CHA|ROW\-HEIGHT\-CH|ROW\-HEIGHT\-C|ROW\-HEIGHT\-|ROW\-HEIGHT|ROW\-HEIGH|ROW\-HEIG|ROW\-HEI|ROW\-HE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_STORED_PROCEDURE(t):
    r'\b(?:STORED\-PROCEDURE|STORED\-PROCEDUR|STORED\-PROCEDU|STORED\-PROCED|STORED\-PROCE|STORED\-PROC)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_WINDOW_MAXIMIZED(t):
    r'\b(?:WINDOW\-MAXIMIZED|WINDOW\-MAXIMIZE|WINDOW\-MAXIMIZ|WINDOW\-MAXIMI|WINDOW\-MAXIM)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_WINDOW_MINIMIZED(t):
    r'\b(?:WINDOW\-MINIMIZED|WINDOW\-MINIMIZE|WINDOW\-MINIMIZ|WINDOW\-MINIMI|WINDOW\-MINIM)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t__WINDOW_SYSTEM(t):
    r'\b(?:{\&WINDOW\-SYSTEM}|{\&WINDOW\-SYSTEM|{\&WINDOW\-SYSTE|{\&WINDOW\-SYST)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_AUTO_COMPLETION(t):
    r'\b(?:AUTO\-COMPLETION|AUTO\-COMPLETIO|AUTO\-COMPLETI|AUTO\-COMPLET|AUTO\-COMPLE|AUTO\-COMPL|AUTO\-COMP)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_CLEAR_SELECTION(t):
    r'\b(?:CLEAR\-SELECTION|CLEAR\-SELECTIO|CLEAR\-SELECTI|CLEAR\-SELECT)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_DEFAULT_NOXLATE(t):
    r'\b(?:DEFAULT\-NOXLATE|DEFAULT\-NOXLAT|DEFAULT\-NOXLA|DEFAULT\-NOXL)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_FIRST_PROCEDURE(t):
    r'\b(?:FIRST\-PROCEDURE|FIRST\-PROCEDUR|FIRST\-PROCEDU|FIRST\-PROCED|FIRST\-PROCE|FIRST\-PROC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GET_FILE_OFFSET(t):
    r'\b(?:GET\-FILE\-OFFSET|GET\-FILE\-OFFSE)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_GET_GREEN_VALUE(t):
    r'\b(?:GET\-GREEN\-VALUE|GET\-GREEN\-VALU|GET\-GREEN\-VAL|GET\-GREEN\-VA|GET\-GREEN\-V|GET\-GREEN\-|GET\-GREEN)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_INHERIT_BGCOLOR(t):
    r'\b(?:INHERIT\-BGCOLOR|INHERIT\-BGCOLO|INHERIT\-BGCOL|INHERIT\-BGCO|INHERIT\-BGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_INHERIT_FGCOLOR(t):
    r'\b(?:INHERIT\-FGCOLOR|INHERIT\-FGCOLO|INHERIT\-FGCOL|INHERIT\-FGCO|INHERIT\-FGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MAX_WIDTH_CHARS(t):
    r'\b(?:MAX\-WIDTH\-CHARS|MAX\-WIDTH\-CHAR|MAX\-WIDTH\-CHA|MAX\-WIDTH\-CH|MAX\-WIDTH\-C|MAX\-WIDTH\-|MAX\-WIDTH)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MIN_WIDTH_CHARS(t):
    r'\b(?:MIN\-WIDTH\-CHARS|MIN\-WIDTH\-CHAR|MIN\-WIDTH\-CHA|MIN\-WIDTH\-CH|MIN\-WIDTH\-C|MIN\-WIDTH\-|MIN\-WIDTH)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_ON_FRAME_BORDER(t):
    r'\b(?:ON\-FRAME\-BORDER|ON\-FRAME\-BORDE|ON\-FRAME\-BORD|ON\-FRAME\-BOR|ON\-FRAME\-BO|ON\-FRAME\-B|ON\-FRAME\-|ON\-FRAME)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PROGRESS_SOURCE(t):
    r'\b(?:PROGRESS\-SOURCE|PROGRESS\-SOURC|PROGRESS\-SOUR|PROGRESS\-SOU|PROGRESS\-SO|PROGRESS\-S)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_RETURN_INSERTED(t):
    r'\b(?:RETURN\-INSERTED|RETURN\-INSERTE|RETURN\-INSERT|RETURN\-INSER|RETURN\-INSE|RETURN\-INS)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SET_GREEN_VALUE(t):
    r'\b(?:SET\-GREEN\-VALUE|SET\-GREEN\-VALU|SET\-GREEN\-VAL|SET\-GREEN\-VA|SET\-GREEN\-V|SET\-GREEN\-|SET\-GREEN)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t__SCOPED_DEFINE(t):
    r'\b(?:\&SCOPED\-DEFINE|\&SCOPED\-DEFIN|\&SCOPED\-DEFI|\&SCOPED\-DEF|\&SCOPED\-DE|\&SCOPED\-D|\&SCOPED\-|\&SCOPED|\&SCOPE|\&SCOP)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_BOX_SELECTABLE(t):
    r'\b(?:BOX\-SELECTABLE|BOX\-SELECTABL|BOX\-SELECTAB|BOX\-SELECTA|BOX\-SELECT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_CASE_SENSITIVE(t):
    r'\b(?:CASE\-SENSITIVE|CASE\-SENSITIV|CASE\-SENSITI|CASE\-SENSIT|CASE\-SENSI|CASE\-SENS|CASE\-SEN)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_DBRESTRICTIONS(t):
    r'\b(?:DBRESTRICTIONS|DBRESTRICTION|DBRESTRICTIO|DBRESTRICTI|DBRESTRICT|DBRESTRIC|DBRESTRI|DBRESTR|DBREST)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_DEFAULT_BUTTON(t):
    r'\b(?:DEFAULT\-BUTTON|DEFAULT\-BUTTO|DEFAULT\-BUTT|DEFAULT\-BUT|DEFAULT\-BU|DEFAULT\-B|DEFAULT\-)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_EXCLUSIVE_LOCK(t):
    r'\b(?:EXCLUSIVE\-LOCK|EXCLUSIVE\-LOC|EXCLUSIVE\-LO|EXCLUSIVE\-L|EXCLUSIVE\-|EXCLUSIVE)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_FIRST_TAB_ITEM(t):
    r'\b(?:FIRST\-TAB\-ITEM|FIRST\-TAB\-ITE|FIRST\-TAB\-IT|FIRST\-TAB\-I)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GET_BLUE_VALUE(t):
    r'\b(?:GET\-BLUE\-VALUE|GET\-BLUE\-VALU|GET\-BLUE\-VAL|GET\-BLUE\-VA|GET\-BLUE\-V|GET\-BLUE\-|GET\-BLUE)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_INSERT_BACKTAB(t):
    r'\b(?:INSERT\-BACKTAB|INSERT\-BACKTA|INSERT\-BACKT|INSERT\-BACK|INSERT\-BAC|INSERT\-BA|INSERT\-B)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_IS_PARTITIONED(t):
    r'\b(?:IS\-PARTITIONED|IS\-PARTITIONE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_LAST_PROCEDURE(t):
    r'\b(?:LAST\-PROCEDURE|LAST\-PROCEDUR|LAST\-PROCEDU|LAST\-PROCED|LAST\-PROCE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MOVE_TO_BOTTOM(t):
    r'\b(?:MOVE\-TO\-BOTTOM|MOVE\-TO\-BOTTO|MOVE\-TO\-BOTT|MOVE\-TO\-BOT|MOVE\-TO\-BO|MOVE\-TO\-B)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_NUMERIC_FORMAT(t):
    r'\b(?:NUMERIC\-FORMAT|NUMERIC\-FORMA|NUMERIC\-FORM|NUMERIC\-FOR|NUMERIC\-FO|NUMERIC\-F)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SCROLL_TO_ITEM(t):
    r'\b(?:SCROLL\-TO\-ITEM|SCROLL\-TO\-ITE|SCROLL\-TO\-IT|SCROLL\-TO\-I)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_SET_BLUE_VALUE(t):
    r'\b(?:SET\-BLUE\-VALUE|SET\-BLUE\-VALU|SET\-BLUE\-VAL|SET\-BLUE\-VA|SET\-BLUE\-V|SET\-BLUE\-|SET\-BLUE)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_TEMP_DIRECTORY(t):
    r'\b(?:TEMP\-DIRECTORY|TEMP\-DIRECTOR|TEMP\-DIRECTO|TEMP\-DIRECT|TEMP\-DIREC|TEMP\-DIRE|TEMP\-DIR)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t__LINE_NUMBER(t):
    r'\b(?:{\&LINE\-NUMBER}|{\&LINE\-NUMBER)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_COLON_ALIGNED(t):
    r'\b(?:COLON\-ALIGNED|COLON\-ALIGNE|COLON\-ALIGN)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_DATA_RELATION(t):
    r'\b(?:DATA\-RELATION|DATA\-RELATIO|DATA\-RELATI|DATA\-RELAT|DATA\-RELA|DATA\-REL)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_FRAME_SPACING(t):
    r'\b(?:FRAME\-SPACING|FRAME\-SPACIN|FRAME\-SPACI|FRAME\-SPAC|FRAME\-SPA)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FULL_PATHNAME(t):
    r'\b(?:FULL\-PATHNAME|FULL\-PATHNAM|FULL\-PATHNA|FULL\-PATHN)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_GET_KEY_VALUE(t):
    r'\b(?:GET\-KEY\-VALUE|GET\-KEY\-VALU|GET\-KEY\-VAL)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_GET_RED_VALUE(t):
    r'\b(?:GET\-RED\-VALUE|GET\-RED\-VALU|GET\-RED\-VAL|GET\-RED\-VA|GET\-RED\-V|GET\-RED\-|GET\-RED)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_HEIGHT_PIXELS(t):
    r'\b(?:HEIGHT\-PIXELS|HEIGHT\-PIXEL|HEIGHT\-PIXE|HEIGHT\-PIX|HEIGHT\-PI|HEIGHT\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_IS_ATTR_SPACE(t):
    r'\b(?:IS\-ATTR\-SPACE|IS\-ATTR\-SPAC|IS\-ATTR\-SPA|IS\-ATTR\-SP|IS\-ATTR\-S|IS\-ATTR\-|IS\-ATTR)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_LABEL_BGCOLOR(t):
    r'\b(?:LABEL\-BGCOLOR|LABEL\-BGCOLO|LABEL\-BGCOL|LABEL\-BGCO|LABEL\-BGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_LABEL_FGCOLOR(t):
    r'\b(?:LABEL\-FGCOLOR|LABEL\-FGCOLO|LABEL\-FGCOL|LABEL\-FGCO|LABEL\-FGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_LABEL_PFCOLOR(t):
    r'\b(?:LABEL\-PFCOLOR|LABEL\-PFCOLO|LABEL\-PFCOL|LABEL\-PFCO|LABEL\-PFC)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_LAST_TAB_ITEM(t):
    r'\b(?:LAST\-TAB\-ITEM|LAST\-TAB\-ITE|LAST\-TAB\-IT|LAST\-TAB\-I)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MOUSE_POINTER(t):
    r'\b(?:MOUSE\-POINTER|MOUSE\-POINTE|MOUSE\-POINT|MOUSE\-POIN|MOUSE\-POI|MOUSE\-PO|MOUSE\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NEXT_TAB_ITEM(t):
    r'\b(?:NEXT\-TAB\-ITEM|NEXT\-TAB\-ITE|NEXT\-TAB\-IT|NEXT\-TAB\-I)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NO_ATTR_SPACE(t):
    r'\b(?:NO\-ATTR\-SPACE|NO\-ATTR\-SPAC|NO\-ATTR\-SPA|NO\-ATTR\-SP|NO\-ATTR\-S|NO\-ATTR\-|NO\-ATTR)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PREV_TAB_ITEM(t):
    r'\b(?:PREV\-TAB\-ITEM|PREV\-TAB\-ITE|PREV\-TAB\-IT|PREV\-TAB\-I)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PUT_KEY_VALUE(t):
    r'\b(?:PUT\-KEY\-VALUE|PUT\-KEY\-VALU|PUT\-KEY\-VAL)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_RIGHT_ALIGNED(t):
    r'\b(?:RIGHT\-ALIGNED|RIGHT\-ALIGNE)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_SET_RED_VALUE(t):
    r'\b(?:SET\-RED\-VALUE|SET\-RED\-VALU|SET\-RED\-VAL|SET\-RED\-VA|SET\-RED\-V|SET\-RED\-|SET\-RED)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_TITLE_BGCOLOR(t):
    r'\b(?:TITLE\-BGCOLOR|TITLE\-BGCOLO|TITLE\-BGCOL|TITLE\-BGCO|TITLE\-BGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_TITLE_FGCOLOR(t):
    r'\b(?:TITLE\-FGCOLOR|TITLE\-FGCOLO|TITLE\-FGCOL|TITLE\-FGCO|TITLE\-FGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t__BATCH_MODE(t):
    r'\b(?:{\&BATCH\-MODE}|{\&BATCH\-MODE|{\&BATCH\-MOD|{\&BATCH\-MO|{\&BATCH\-M|{\&BATCH\-)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_COLUMN_LABEL(t):
    r'\b(?:COLUMN\-LABEL|COLUMN\-LABE|COLUMN\-LAB)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_CURSOR_RIGHT(t):
    r'\b(?:CURSOR\-RIGHT)(?!\-)\b'
    t.tag = 'red'
    return t
    
def t_DISPLAY_TYPE(t):
    r'\b(?:DISPLAY\-TYPE|DISPLAY\-TYP|DISPLAY\-TY|DISPLAY\-T)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_ERROR_COLUMN(t):
    r'\b(?:ERROR\-COLUMN|ERROR\-COLUM|ERROR\-COLU|ERROR\-COL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_ERROR_STATUS(t):
    r'\b(?:ERROR\-STATUS|ERROR\-STATU|ERROR\-STAT)(?!\-)\b'
    t.tag = 'magenta'
    return t
    
def t_FRAME_FIELDS(t):
    r'\b(?:FRAME\-FIELDS|FRAME\-FIELD)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FROM_CURRENT(t):
    r'\b(?:FROM\-CURRENT|FROM\-CURREN|FROM\-CURRE|FROM\-CURR|FROM\-CUR)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_GRAPHIC_EDGE(t):
    r'\b(?:GRAPHIC\-EDGE|GRAPHIC\-EDG|GRAPHIC\-ED|GRAPHIC\-E)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_HEIGHT_CHARS(t):
    r'\b(?:HEIGHT\-CHARS|HEIGHT\-CHAR|HEIGHT\-CHA|HEIGHT\-CH|HEIGHT\-C|HEIGHT\-|HEIGHT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_INPUT_OUTPUT(t):
    r'\b(?:INPUT\-OUTPUT|INPUT\-OUTPU|INPUT\-OUTP|INPUT\-OUT|INPUT\-OU|INPUT\-O)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_IS_LEAD_BYTE(t):
    r'\b(?:IS\-LEAD\-BYTE|IS\-LEAD\-BYT|IS\-LEAD\-BY|IS\-LEAD\-B|IS\-LEAD\-|IS\-LEAD)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_KEY_FUNCTION(t):
    r'\b(?:KEY\-FUNCTION|KEY\-FUNCTIO|KEY\-FUNCTI|KEY\-FUNCT|KEY\-FUNC)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_LABEL_DCOLOR(t):
    r'\b(?:LABEL\-DCOLOR|LABEL\-DCOLO|LABEL\-DCOL|LABEL\-DCO|LABEL\-DC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_LEFT_ALIGNED(t):
    r'\b(?:LEFT\-ALIGNED|LEFT\-ALIGNE|LEFT\-ALIGN)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_LINE_COUNTER(t):
    r'\b(?:LINE\-COUNTER|LINE\-COUNTE|LINE\-COUNT)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_NO_ATTR_LIST(t):
    r'\b(?:NO\-ATTR\-LIST|NO\-ATTR\-LIS|NO\-ATTR\-LI|NO\-ATTR\-L|NO\-ATTR\-|NO\-ATTR)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NO_UNDERLINE(t):
    r'\b(?:NO\-UNDERLINE|NO\-UNDERLIN|NO\-UNDERLI|NO\-UNDERL|NO\-UNDER|NO\-UNDE|NO\-UND)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PRIVATE_DATA(t):
    r'\b(?:PRIVATE\-DATA|PRIVATE\-DAT|PRIVATE\-DA|PRIVATE\-D)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_RETURN_VALUE(t):
    r'\b(?:RETURN\-VALUE|RETURN\-VALU|RETURN\-VAL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SAX_COMPLETE(t):
    r'\b(?:SAX\-COMPLETE|SAX\-COMPLET|SAX\-COMPLE)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_SCREEN_VALUE(t):
    r'\b(?:SCREEN\-VALUE|SCREEN\-VALU|SCREEN\-VAL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_TITLE_DCOLOR(t):
    r'\b(?:TITLE\-DCOLOR|TITLE\-DCOLO|TITLE\-DCOL|TITLE\-DCO|TITLE\-DC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_WIDGET_ENTER(t):
    r'\b(?:WIDGET\-ENTER|WIDGET\-ENTE|WIDGET\-ENT|WIDGET\-EN|WIDGET\-E)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_WIDGET_LEAVE(t):
    r'\b(?:WIDGET\-LEAVE|WIDGET\-LEAV|WIDGET\-LEA|WIDGET\-LE|WIDGET\-L)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_WIDTH_PIXELS(t):
    r'\b(?:WIDTH\-PIXELS|WIDTH\-PIXEL|WIDTH\-PIXE|WIDTH\-PIX|WIDTH\-PI|WIDTH\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_WINDOW_STATE(t):
    r'\b(?:WINDOW\-STATE|WINDOW\-STAT|WINDOW\-STA)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_AUTO_INDENT(t):
    r'\b(?:AUTO\-INDENT|AUTO\-INDEN|AUTO\-INDE|AUTO\-IND)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_AUTO_RETURN(t):
    r'\b(?:AUTO\-RETURN|AUTO\-RETUR|AUTO\-RETU|AUTO\-RET)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BEFORE_HIDE(t):
    r'\b(?:BEFORE\-HIDE|BEFORE\-HID|BEFORE\-HI|BEFORE\-H)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_BLOCK_LEVEL(t):
    r'\b(?:BLOCK\-LEVEL|BLOCK\-LEVE|BLOCK\-LEV)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_CURSOR_DOWN(t):
    r'\b(?:CURSOR\-DOWN)(?!\-)\b'
    t.tag = 'red'
    return t
    
def t_CURSOR_LEFT(t):
    r'\b(?:CURSOR\-LEFT)(?!\-)\b'
    t.tag = 'red'
    return t
    
def t_DATE_FORMAT(t):
    r'\b(?:DATE\-FORMAT|DATE\-FORMA|DATE\-FORM|DATE\-FOR|DATE\-FO|DATE\-F)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_EDGE_PIXELS(t):
    r'\b(?:EDGE\-PIXELS|EDGE\-PIXEL|EDGE\-PIXE|EDGE\-PIX|EDGE\-PI|EDGE\-P)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FILE_OFFSET(t):
    r'\b(?:FILE\-OFFSET|FILE\-OFFSE|FILE\-OFFS|FILE\-OFF)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FRAME_INDEX(t):
    r'\b(?:FRAME\-INDEX|FRAME\-INDE)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FRAME_VALUE(t):
    r'\b(?:FRAME\-VALUE|FRAME\-VALU|FRAME\-VAL)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_FROM_PIXELS(t):
    r'\b(?:FROM\-PIXELS|FROM\-PIXEL|FROM\-PIXE|FROM\-PIX|FROM\-PI|FROM\-P)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_INFORMATION(t):
    r'\b(?:INFORMATION|INFORMATIO|INFORMATI|INFORMAT|INFORMA|INFORM|INFOR|INFO)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_KEYFUNCTION(t):
    r'\b(?:KEYFUNCTION|KEYFUNCTIO|KEYFUNCTI|KEYFUNCT|KEYFUNC)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_MOVE_COLUMN(t):
    r'\b(?:MOVE\-COLUMN|MOVE\-COLUM|MOVE\-COLU|MOVE\-COL)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_MOVE_TO_TOP(t):
    r'\b(?:MOVE\-TO\-TOP|MOVE\-TO\-TO|MOVE\-TO\-T)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_NO_PREFETCH(t):
    r'\b(?:NO\-PREFETCH|NO\-PREFETC|NO\-PREFET|NO\-PREFE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NO_VALIDATE(t):
    r'\b(?:NO\-VALIDATE|NO\-VALIDAT|NO\-VALIDA|NO\-VALID|NO\-VALI|NO\-VAL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NUM_ALIASES(t):
    r'\b(?:NUM\-ALIASES|NUM\-ALIASE|NUM\-ALIAS|NUM\-ALIA|NUM\-ALI)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_NUM_BUTTONS(t):
    r'\b(?:NUM\-BUTTONS|NUM\-BUTTON|NUM\-BUTTO|NUM\-BUTT|NUM\-BUT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NUM_COLUMNS(t):
    r'\b(?:NUM\-COLUMNS|NUM\-COLUMN|NUM\-COLUM|NUM\-COLU|NUM\-COL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PAGE_BOTTOM(t):
    r'\b(?:PAGE\-BOTTOM|PAGE\-BOTTO|PAGE\-BOTT|PAGE\-BOT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PAGE_NUMBER(t):
    r'\b(?:PAGE\-NUMBER|PAGE\-NUMBE|PAGE\-NUMB|PAGE\-NUM)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_PROC_HANDLE(t):
    r'\b(?:PROC\-HANDLE|PROC\-HANDL|PROC\-HAND|PROC\-HAN|PROC\-HA)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_PROC_STATUS(t):
    r'\b(?:PROC\-STATUS|PROC\-STATU|PROC\-STAT|PROC\-STA|PROC\-ST)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_SIDE_LABELS(t):
    r'\b(?:SIDE\-LABELS|SIDE\-LABEL|SIDE\-LABE|SIDE\-LAB)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SIZE_PIXELS(t):
    r'\b(?:SIZE\-PIXELS|SIZE\-PIXEL|SIZE\-PIXE|SIZE\-PIX|SIZE\-PI|SIZE\-P)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_SUB_AVERAGE(t):
    r'\b(?:SUB\-AVERAGE|SUB\-AVERAG|SUB\-AVERA|SUB\-AVER|SUB\-AVE)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_SUB_MAXIMUM(t):
    r'\b(?:SUB\-MAXIMUM|SUB\-MAXIMU|SUB\-MAXIM|SUB\-MAXI|SUB\-MAX)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_SUB_MINIMUM(t):
    r'\b(?:SUB\-MINIMUM|SUB\-MINIMU|SUB\-MINIM|SUB\-MINI|SUB\-MIN)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_UNFORMATTED(t):
    r'\b(?:UNFORMATTED|UNFORMATTE|UNFORMATT|UNFORMAT|UNFORMA|UNFORM)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_WIDTH_CHARS(t):
    r'\b(?:WIDTH\-CHARS|WIDTH\-CHAR|WIDTH\-CHA|WIDTH\-CH|WIDTH\-C|WIDTH\-|WIDTH)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_ACCUMULATE(t):
    r'\b(?:ACCUMULATE|ACCUMULAT|ACCUMULA|ACCUMUL|ACCUMU|ACCUM)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_ATTR_SPACE(t):
    r'\b(?:ATTR\-SPACE|ATTR\-SPAC|ATTR\-SPA|ATTR\-SP|ATTR\-S|ATTR\-|ATTR)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BACKGROUND(t):
    r'\b(?:BACKGROUND|BACKGROUN|BACKGROU|BACKGRO|BACKGR|BACKG|BACK)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BATCH_MODE(t):
    r'\b(?:BATCH\-MODE|BATCH\-MOD|BATCH\-MO|BATCH\-M|BATCH\-|BATCH)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_DESCENDING(t):
    r'\b(?:DESCENDING|DESCENDIN|DESCENDI|DESCEND|DESCEN|DESCE|DESC)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_DICTIONARY(t):
    r'\b(?:DICTIONARY|DICTIONAR|DICTIONA|DICTION|DICTIO|DICTI|DICT)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_DISCONNECT(t):
    r'\b(?:DISCONNECT|DISCONNEC|DISCONNE|DISCONN|DISCON)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_EDGE_CHARS(t):
    r'\b(?:EDGE\-CHARS|EDGE\-CHAR|EDGE\-CHA|EDGE\-CH|EDGE\-C|EDGE\-|EDGE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_EVENT_TYPE(t):
    r'\b(?:EVENT\-TYPE|EVENT\-TYP|EVENT\-TY|EVENT\-T)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FOREGROUND(t):
    r'\b(?:FOREGROUND|FOREGROUN|FOREGROU|FOREGRO|FOREGR|FOREG|FORE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FRAME_DOWN(t):
    r'\b(?:FRAME\-DOWN)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FRAME_FILE(t):
    r'\b(?:FRAME\-FILE)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FRAME_LINE(t):
    r'\b(?:FRAME\-LINE)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FRAME_NAME(t):
    r'\b(?:FRAME\-NAME)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FROM_CHARS(t):
    r'\b(?:FROM\-CHARS|FROM\-CHAR|FROM\-CHA|FROM\-CH|FROM\-C)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_GO_PENDING(t):
    r'\b(?:GO\-PENDING|GO\-PENDIN|GO\-PENDI|GO\-PEND)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_HORIZONTAL(t):
    r'\b(?:HORIZONTAL|HORIZONTA|HORIZONT|HORIZON|HORIZO|HORIZ|HORI)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_INSERT_TAB(t):
    r'\b(?:INSERT\-TAB|INSERT\-TA|INSERT\-T)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_LAST_EVENT(t):
    r'\b(?:LAST\-EVENT|LAST\-EVEN)(?!\-)\b'
    t.tag = 'magenta'
    return t
    
def t_MENU_MOUSE(t):
    r'\b(?:MENU\-MOUSE|MENU\-MOUS|MENU\-MOU|MENU\-MO|MENU\-M)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NO_MESSAGE(t):
    r'\b(?:NO\-MESSAGE|NO\-MESSAG|NO\-MESSA|NO\-MESS|NO\-MES)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PAGE_WIDTH(t):
    r'\b(?:PAGE\-WIDTH|PAGE\-WIDT|PAGE\-WID)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_PERSISTENT(t):
    r'\b(?:PERSISTENT|PERSISTEN|PERSISTE|PERSIST)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_POPUP_MENU(t):
    r'\b(?:POPUP\-MENU|POPUP\-MEN|POPUP\-ME|POPUP\-M)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_POPUP_ONLY(t):
    r'\b(?:POPUP\-ONLY|POPUP\-ONL|POPUP\-ON|POPUP\-O)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PREPROCESS(t):
    r'\b(?:PREPROCESS|PREPROCES|PREPROCE|PREPROC)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_PROMPT_FOR(t):
    r'\b(?:PROMPT\-FOR|PROMPT\-FO|PROMPT\-F)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_PROVERSION(t):
    r'\b(?:PROVERSION|PROVERSIO|PROVERSI|PROVERS)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_SHARE_LOCK(t):
    r'\b(?:SHARE\-LOCK|SHARE\-LOC|SHARE\-LO|SHARE\-L|SHARE\-|SHARE)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_SHOW_STATS(t):
    r'\b(?:SHOW\-STATS|SHOW\-STAT)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_SIZE_CHARS(t):
    r'\b(?:SIZE\-CHARS|SIZE\-CHAR|SIZE\-CHA|SIZE\-CH|SIZE\-C)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_SUBSTITUTE(t):
    r'\b(?:SUBSTITUTE|SUBSTITUT|SUBSTITU|SUBSTIT|SUBSTI|SUBST)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_TITLE_FONT(t):
    r'\b(?:TITLE\-FONT|TITLE\-FON|TITLE\-FO)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_UNBUFFERED(t):
    r'\b(?:UNBUFFERED|UNBUFFERE|UNBUFFER|UNBUFFE|UNBUFF)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_WORK_TABLE(t):
    r'\b(?:WORK\-TABLE|WORK\-TABL|WORK\-TAB)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t__UNDEFINE(t):
    r'\b(?:\&UNDEFINE|\&UNDEFIN|\&UNDEFI|\&UNDEF)(?!\-)\b'
    t.tag = 'yellow'
    return t
    
def t_AMBIGUOUS(t):
    r'\b(?:AMBIGUOUS|AMBIGUOU|AMBIGUO|AMBIGU|AMBIG)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_ASCENDING(t):
    r'\b(?:ASCENDING|ASCENDIN|ASCENDI|ASCEND|ASCEN|ASCE|ASC)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_AVAILABLE(t):
    r'\b(?:AVAILABLE|AVAILABL|AVAILAB|AVAILA|AVAIL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BACKWARDS(t):
    r'\b(?:BACKWARDS|BACKWARD)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_CHARACTER(t):
    r'\b(?:CHARACTER|CHARACTE|CHARACT|CHARAC|CHARA|CHAR)(?!\-)\b'
    t.tag = 'violet'
    return t
    
def t_CURSOR_UP(t):
    r'\b(?:CURSOR\-UP)(?!\-)\b'
    t.tag = 'red'
    return t
    
def t_DATA_TYPE(t):
    r'\b(?:DATA\-TYPE|DATA\-TYP|DATA\-TY|DATA\-T)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_DBVERSION(t):
    r'\b(?:DBVERSION|DBVERSIO|DBVERSI|DBVERS)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FORMATTED(t):
    r'\b(?:FORMATTED|FORMATTE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FRAME_COL(t):
    r'\b(?:FRAME\-COL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FRAME_ROW(t):
    r'\b(?:FRAME\-ROW)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_LANGUAGES(t):
    r'\b(?:LANGUAGES|LANGUAGE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MAX_VALUE(t):
    r'\b(?:MAX\-VALUE|MAX\-VALU|MAX\-VAL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MIN_VALUE(t):
    r'\b(?:MIN\-VALUE|MIN\-VALU|MIN\-VAL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_NO_LABELS(t):
    r'\b(?:NO\-LABELS|NO\-LABEL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_OS_DRIVES(t):
    r'\b(?:OS\-DRIVES|OS\-DRIVE)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_PARAMETER(t):
    r'\b(?:PARAMETER|PARAMETE|PARAMET|PARAME|PARAM)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PRESELECT(t):
    r'\b(?:PRESELECT|PRESELEC|PRESELE|PRESEL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_RECTANGLE(t):
    r'\b(?:RECTANGLE|RECTANGL|RECTANG|RECTAN|RECTA|RECT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_RESIZABLE(t):
    r'\b(?:RESIZABLE|RESIZABL|RESIZAB|RESIZA)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SETUSERID(t):
    r'\b(?:SETUSERID|SETUSERI|SETUSER)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_SUBSTRING(t):
    r'\b(?:SUBSTRING|SUBSTRIN|SUBSTRI|SUBSTR)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_UNDERLINE(t):
    r'\b(?:UNDERLINE|UNDERLIN|UNDERLI|UNDERL)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_ABSOLUTE(t):
    r'\b(?:ABSOLUTE|ABSOLUT|ABSOLU|ABSOL|ABSO|ABS)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_AUTO_ZAP(t):
    r'\b(?:AUTO\-ZAP|AUTO\-ZA|AUTO\-Z)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_CENTERED(t):
    r'\b(?:CENTERED|CENTERE|CENTER)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FRAGMENT(t):
    r'\b(?:FRAGMENT|FRAGMEN)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FRAME_DB(t):
    r'\b(?:FRAME\-DB)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_GATEWAYS(t):
    r'\b(?:GATEWAYS|GATEWAY)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_IS_CLASS(t):
    r'\b(?:IS\-CLASS|IS\-CLAS)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MENU_KEY(t):
    r'\b(?:MENU\-KEY|MENU\-KE|MENU\-K)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_SUB_MENU(t):
    r'\b(?:SUB\-MENU|SUB\-MEN|SUB\-ME|SUB\-M|SUB\-)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_TERMINAL(t):
    r'\b(?:TERMINAL|TERMINA|TERMIN|TERMI|TERM)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_TRUNCATE(t):
    r'\b(?:TRUNCATE|TRUNCAT|TRUNCA|TRUNC)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_VARIABLE(t):
    r'\b(?:VARIABLE|VARIABL|VARIAB|VARIA|VARI|VAR)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_VERTICAL(t):
    r'\b(?:VERTICAL|VERTICA|VERTIC|VERTI|VERT)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_ANALYZE(t):
    r'\b(?:ANALYZE|ANALYZ)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_AVERAGE(t):
    r'\b(?:AVERAGE|AVERAG|AVERA|AVER|AVE)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_BGCOLOR(t):
    r'\b(?:BGCOLOR|BGCOLO|BGCOL|BGCO|BGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_BUTTONS(t):
    r'\b(?:BUTTONS|BUTTON)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_DECIMAL(t):
    r'\b(?:DECIMAL|DECIMA|DECIM|DECI|DEC)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FGCOLOR(t):
    r'\b(?:FGCOLOR|FGCOLO|FGCOL|FGCO|FGC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FRAME_X(t):
    r'\b(?:FRAME\-X)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_FRAME_Y(t):
    r'\b(?:FRAME\-Y)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_INITIAL(t):
    r'\b(?:INITIAL|INITIA|INITI|INIT)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_INTEGER(t):
    r'\b(?:INTEGER|INTEGE|INTEG|INTE|INT)(?!\-)\b'
    t.tag = 'violet'
    return t
    
def t_LISTING(t):
    r'\b(?:LISTING|LISTIN|LISTI)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_MAXIMUM(t):
    r'\b(?:MAXIMUM|MAXIMU|MAXIM|MAXI|MAX)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_MINIMUM(t):
    r'\b(?:MINIMUM|MINIMU|MINIM|MINI|MIN)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_NO_FILL(t):
    r'\b(?:NO\-FILL|NO\-FIL|NO\-FI|NO\-F)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_PFCOLOR(t):
    r'\b(?:PFCOLOR|PFCOLO|PFCOL|PFCO|PFC)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_STOPPED(t):
    r'\b(?:STOPPED|STOPPE)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_COLUMN(t):
    r'\b(?:COLUMN|COLUM|COLU|COL)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_CURSOR(t):
    r'\b(?:CURSOR|CURSO|CURS)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_DDE_ID(t):
    r'\b(?:DDE\-ID|DDE\-I)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_DEFINE(t):
    r'\b(?:DEFINE|DEFIN|DEFI|DEF)(?!\-)\b'
    t.tag = 'blue'
    return t
    
def t_DELETE(t):
    r'\b(?:DELETE|DELET|DELE|DEL)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FIELDS(t):
    r'\b(?:FIELDS|FIELD)(?!\-)\b'
    t.tag = 'grey'
    return t
    
def t_FORMAT(t):
    r'\b(?:FORMAT|FORMA|FORM)(?!\-)\b'
    t.tag = 'cyan'
    return t
    
def t_MODULO(t):
    r'\b(?:MODULO|MODUL|MODU|MOD)(?!\-)\b'
    t.tag = 'magenta'
    return t
    
def t_DEBUG(t):
    r'\b(?:DEBUG|DEBU)(?!\-)\b'
    t.tag = 'orange'
    return t
    
def t_FRAME(t):
    r'\b(?:FRAME|FRAM)(?!\-)\b'
    t.tag = 'cyan'
    return t
     
# This will track whitespace and adds a lot of time to processing. Not tracking 
# it however will force the user into the indent scheme
# t_WHITESPACE = r'\s+'

# Some of these might be better not ignored. However for syntax highlighting
# they throw a lot of errors. As this is continuing, it might be better to 
# define 2 states, one for syntax highlighting and one for parsing.
# t_ignore = r'.'
t_ignore = ' }\t'

#####
### End of procedurally generated code
#####

# These are things like RUN dir/file.p(). And we need to keep the path together
def t_SRC_FILE(t):
    r'[a-zA-Z0-9][a-zA-Z0-9\.\-\/\_]*\.p[!a-zA-Z0-9]'
    t.tag = 'red'
    return t

# Catch all variable names etc. 
def t_ID(t):
    r'[a-zA-Z_][a-zA-Z_\:\-\.0-9]*[a-zA-Z_\%\-0-9]|\b[a-zA-Z]\b'
    _id = {'keyword': '', 'token': 'ID', 'cat': '', 'tag': ['alt_blue'], 'mark': []}
    result = kw_lookup.get(t.value.upper(),_id)    # Check for reserved words
    t.type = result['token']
    t.tag  = result['tag']
    return t

### Should change this out if not following whitespace rules   
def t_PERIOD(t):
    r'\.'
    if t.lexer.soft_block:
        t.lexer.soft_block = False
        t.indent = -1
        t.tag = ''
    return t

def t_COLON(t):
    r':(?![a-zA-Z])'
    if not t.lexer.in_query and t.lexer.soft_block:
        t.lexer.soft_block = False
        t.tag = ''
    t.lexer.in_query = False
    return t

def t_EQUALS(t):
    r'='
    if not t.lexer.soft_block and not t.lexer.in_query:
        t.lexer.soft_block = True
        t.indent = 1
        t.tag = ''
    return t   

def t_LPAREN(t):
    r'\('
    t.indent = 1
    t.tag = 'magenta'
    return t

def t_RPAREN(t):
    r'\)'
    t.indent = -1
    t.tag = 'magenta'
    return t

# This is a hack to prevent the lexer from throwing an error on a bad word and deleting it.
def t_CATCHALL(t):
    r'[0-9][a-zA-Z_0-9\.,\-=]*'
    t.type = 'ERROR'
    t.tag = 'error'
    return t

def t_error(t):
    logger.error(f"Illegal character {t.value[0:50]} @ ln:{t.lineno} col:{t.colno} <<<<<<<<")
    return t
    ## We dont want to skip just yet. That is destructive and I don't trust this yet. 
    # t.lexer.skip(1)
